//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PalletLinkWebAPI.wsMes {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    using System.Configuration;
    using Encryption4_5;
    using System.Data.SqlClient;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://chimestis10/webservices/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EPS_BoardWipMoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback PassInspectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HistoryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback HistoryByStepAndLoopsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BoardInHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoopsByStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaterialIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRouteStepID_EquipmentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_BatchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_GetBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_LinkedSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_ProgressionInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_BatchSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_LinkNonUniqueComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback JoinPanelOperationCompleted;
        
        private System.Threading.SendOrPostCallback BreakOutPanelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTester_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRouteStep_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataEquipmentByBayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMESIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataProgressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataProgressionByRouteBayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTesterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_LinkUniqueComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEquipmentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBySerialNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByPanelWithCoordinatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllByWipIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByPanelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssemblySequenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkCellInMESOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadInfoSMTOperationCompleted;
        
        private System.Threading.SendOrPostCallback QM_CRDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeederTrayTrackOperationCompleted;
        
        private System.Threading.SendOrPostCallback EquiposListByActiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QM_SelectByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QM_SelectBySerialNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback WP_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback QM_DefectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CR_RouteStepsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBoardOnHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseBoardOnHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListActiveHoldsByWipIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRouteStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListActiveByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback BoardHistoryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_BirthHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_PackingSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaterialByBOMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaterialInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRDsByBOMMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevisionAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback dtSQLQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectByNameAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectByNameAssemblyVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRDsByAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InspectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IDModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SheetCRDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_LinkChildBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_CreateBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_UnlinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByLinkObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByCustomerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListByPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback StepStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback IStepStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStepStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DiagnosticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoardSideOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsMasterModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsMasterTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoardSideMachineFYPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoardSideMachineAXIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoardSideMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTesterAOIOperationCompleted;
        
        private System.Threading.SendOrPostCallback IDAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPS_BoardWipMoveStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;

        private string sqlServerMICT = System.Configuration.ConfigurationManager.AppSettings["sqlServerMICT"].ToString();

        private string sqlDatabaseMICT = System.Configuration.ConfigurationManager.AppSettings["sqlDatabaseMICT"].ToString();
        
        /// <remarks/>
        public Service() {
            this.Url = getUrl();
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        private string getUrl()
        {
            string url = null;
            Encryption encryption = new Encryption();
            string sqlConnectionMICT = "Data Source=" + encryption.DecryptString(sqlServerMICT) + ";Integrated Security=SSPI; Initial Catalog=" +
                    encryption.DecryptString(sqlDatabaseMICT) + ";";

            using (var connection = new SqlConnection(sqlConnectionMICT))
            using (var command = new SqlCommand("up_getConfigurationByDescription", connection){
                CommandType = CommandType.StoredProcedure})

            {
                connection.Open();
                command.Parameters.AddWithValue("@description", "MES Web Service");

                SqlDataReader dataReader = command.ExecuteReader();

                if (!dataReader.HasRows)
                {
                    return null;
                }

                while (dataReader.Read())
                {
                    url = (string)dataReader["Value"];
                    break;
                }
                return url;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EPS_BoardWipMoveCompletedEventHandler EPS_BoardWipMoveCompleted;
        
        /// <remarks/>
        public event PassInspectionsCompletedEventHandler PassInspectionsCompleted;
        
        /// <remarks/>
        public event HistoryStatusCompletedEventHandler HistoryStatusCompleted;
        
        /// <remarks/>
        public event HistoryByStepAndLoopsCompletedEventHandler HistoryByStepAndLoopsCompleted;
        
        /// <remarks/>
        public event BoardInHoldCompletedEventHandler BoardInHoldCompleted;
        
        /// <remarks/>
        public event IsScrapCompletedEventHandler IsScrapCompleted;
        
        /// <remarks/>
        public event LoopsByStepCompletedEventHandler LoopsByStepCompleted;
        
        /// <remarks/>
        public event GetMaterialIDCompletedEventHandler GetMaterialIDCompleted;
        
        /// <remarks/>
        public event GetRouteStepID_EquipmentIDCompletedEventHandler GetRouteStepID_EquipmentIDCompleted;
        
        /// <remarks/>
        public event EPS_BatchInfoCompletedEventHandler EPS_BatchInfoCompleted;
        
        /// <remarks/>
        public event EPS_GetBatchesCompletedEventHandler EPS_GetBatchesCompleted;
        
        /// <remarks/>
        public event EPS_LinkedSNCompletedEventHandler EPS_LinkedSNCompleted;
        
        /// <remarks/>
        public event EPS_ProgressionInspectionCompletedEventHandler EPS_ProgressionInspectionCompleted;
        
        /// <remarks/>
        public event EPS_BatchSNCompletedEventHandler EPS_BatchSNCompleted;
        
        /// <remarks/>
        public event EPS_LinkNonUniqueComponentCompletedEventHandler EPS_LinkNonUniqueComponentCompleted;
        
        /// <remarks/>
        public event JoinPanelCompletedEventHandler JoinPanelCompleted;
        
        /// <remarks/>
        public event BreakOutPanelCompletedEventHandler BreakOutPanelCompleted;
        
        /// <remarks/>
        public event GetNextAssemblyCompletedEventHandler GetNextAssemblyCompleted;
        
        /// <remarks/>
        public event GetTester_IDCompletedEventHandler GetTester_IDCompleted;
        
        /// <remarks/>
        public event GetRouteStep_IDCompletedEventHandler GetRouteStep_IDCompleted;
        
        /// <remarks/>
        public event GetDataEquipmentByBayCompletedEventHandler GetDataEquipmentByBayCompleted;
        
        /// <remarks/>
        public event GetDataEquipmentCompletedEventHandler GetDataEquipmentCompleted;
        
        /// <remarks/>
        public event GetUserMESIDCompletedEventHandler GetUserMESIDCompleted;
        
        /// <remarks/>
        public event GetDataProgressionCompletedEventHandler GetDataProgressionCompleted;
        
        /// <remarks/>
        public event GetDataProgressionByRouteBayCompletedEventHandler GetDataProgressionByRouteBayCompleted;
        
        /// <remarks/>
        public event GetCheckPointCompletedEventHandler GetCheckPointCompleted;
        
        /// <remarks/>
        public event GetTesterInfoCompletedEventHandler GetTesterInfoCompleted;
        
        /// <remarks/>
        public event EPS_LinkUniqueComponentCompletedEventHandler EPS_LinkUniqueComponentCompleted;
        
        /// <remarks/>
        public event GetEquipmentIDCompletedEventHandler GetEquipmentIDCompleted;
        
        /// <remarks/>
        public event SelectBySerialNumberCompletedEventHandler SelectBySerialNumberCompleted;
        
        /// <remarks/>
        public event ListByPanelWithCoordinatesCompletedEventHandler ListByPanelWithCoordinatesCompleted;
        
        /// <remarks/>
        public event ListAllByWipIDCompletedEventHandler ListAllByWipIDCompleted;
        
        /// <remarks/>
        public event ListByBoardCompletedEventHandler ListByBoardCompleted;
        
        /// <remarks/>
        public event ListByPanelCompletedEventHandler ListByPanelCompleted;
        
        /// <remarks/>
        public event GetAssemblySequenceCompletedEventHandler GetAssemblySequenceCompleted;
        
        /// <remarks/>
        public event GetWorkCellInMESCompletedEventHandler GetWorkCellInMESCompleted;
        
        /// <remarks/>
        public event ListByNumberCompletedEventHandler ListByNumberCompleted;
        
        /// <remarks/>
        public event UnitHistoryCompletedEventHandler UnitHistoryCompleted;
        
        /// <remarks/>
        public event LoadInfoSMTCompletedEventHandler LoadInfoSMTCompleted;
        
        /// <remarks/>
        public event QM_CRDsCompletedEventHandler QM_CRDsCompleted;
        
        /// <remarks/>
        public event FeederTrayTrackCompletedEventHandler FeederTrayTrackCompleted;
        
        /// <remarks/>
        public event EquiposListByActiveStatusCompletedEventHandler EquiposListByActiveStatusCompleted;
        
        /// <remarks/>
        public event QM_SelectByIDCompletedEventHandler QM_SelectByIDCompleted;
        
        /// <remarks/>
        public event QM_SelectBySerialNumberCompletedEventHandler QM_SelectBySerialNumberCompleted;
        
        /// <remarks/>
        public event WP_BatchCompletedEventHandler WP_BatchCompleted;
        
        /// <remarks/>
        public event QM_DefectsCompletedEventHandler QM_DefectsCompleted;
        
        /// <remarks/>
        public event CR_RouteStepsCompletedEventHandler CR_RouteStepsCompleted;
        
        /// <remarks/>
        public event PlaceBoardOnHoldCompletedEventHandler PlaceBoardOnHoldCompleted;
        
        /// <remarks/>
        public event ReleaseBoardOnHoldCompletedEventHandler ReleaseBoardOnHoldCompleted;
        
        /// <remarks/>
        public event ListActiveHoldsByWipIDCompletedEventHandler ListActiveHoldsByWipIDCompleted;
        
        /// <remarks/>
        public event SearchRepairCompletedEventHandler SearchRepairCompleted;
        
        /// <remarks/>
        public event SearchDefectCompletedEventHandler SearchDefectCompleted;
        
        /// <remarks/>
        public event GetRouteStepCompletedEventHandler GetRouteStepCompleted;
        
        /// <remarks/>
        public event ListActiveByCustomerCompletedEventHandler ListActiveByCustomerCompleted;
        
        /// <remarks/>
        public event BoardHistoryReportCompletedEventHandler BoardHistoryReportCompleted;
        
        /// <remarks/>
        public event EPS_BirthHistoryCompletedEventHandler EPS_BirthHistoryCompleted;
        
        /// <remarks/>
        public event EPS_PackingSNCompletedEventHandler EPS_PackingSNCompleted;
        
        /// <remarks/>
        public event GetMaterialByBOMCompletedEventHandler GetMaterialByBOMCompleted;
        
        /// <remarks/>
        public event GetMaterialInfoCompletedEventHandler GetMaterialInfoCompleted;
        
        /// <remarks/>
        public event GetCRDsByBOMMaterialCompletedEventHandler GetCRDsByBOMMaterialCompleted;
        
        /// <remarks/>
        public event RevisionAssemblyCompletedEventHandler RevisionAssemblyCompleted;
        
        /// <remarks/>
        public event dtSQLQueryCompletedEventHandler dtSQLQueryCompleted;
        
        /// <remarks/>
        public event SelectByNameAssemblyCompletedEventHandler SelectByNameAssemblyCompleted;
        
        /// <remarks/>
        public event SelectByNameAssemblyVersionCompletedEventHandler SelectByNameAssemblyVersionCompleted;
        
        /// <remarks/>
        public event GetCRDsByAssemblyCompletedEventHandler GetCRDsByAssemblyCompleted;
        
        /// <remarks/>
        public event InspectionsCompletedEventHandler InspectionsCompleted;
        
        /// <remarks/>
        public event IDModelCompletedEventHandler IDModelCompleted;
        
        /// <remarks/>
        public event SheetCRDsCompletedEventHandler SheetCRDsCompleted;
        
        /// <remarks/>
        public event EPS_LinkChildBoardCompletedEventHandler EPS_LinkChildBoardCompleted;
        
        /// <remarks/>
        public event EPS_CreateBoardCompletedEventHandler EPS_CreateBoardCompleted;
        
        /// <remarks/>
        public event EPS_UnlinkCompletedEventHandler EPS_UnlinkCompleted;
        
        /// <remarks/>
        public event ListByLinkObjectIDCompletedEventHandler ListByLinkObjectIDCompleted;
        
        /// <remarks/>
        public event ListByCustomerIDCompletedEventHandler ListByCustomerIDCompleted;
        
        /// <remarks/>
        public event ListByCustomerNameCompletedEventHandler ListByCustomerNameCompleted;
        
        /// <remarks/>
        public event ListByPropertyCompletedEventHandler ListByPropertyCompleted;
        
        /// <remarks/>
        public event StepStatusCompletedEventHandler StepStatusCompleted;
        
        /// <remarks/>
        public event IStepStatusCompletedEventHandler IStepStatusCompleted;
        
        /// <remarks/>
        public event GetStepStatusCompletedEventHandler GetStepStatusCompleted;
        
        /// <remarks/>
        public event DiagnosticsCompletedEventHandler DiagnosticsCompleted;
        
        /// <remarks/>
        public event RepairCompletedEventHandler RepairCompleted;
        
        /// <remarks/>
        public event GetBoardSideCompletedEventHandler GetBoardSideCompleted;
        
        /// <remarks/>
        public event IsMasterCompletedEventHandler IsMasterCompleted;
        
        /// <remarks/>
        public event IsMasterModelCompletedEventHandler IsMasterModelCompleted;
        
        /// <remarks/>
        public event IsMasterTypeCompletedEventHandler IsMasterTypeCompleted;
        
        /// <remarks/>
        public event GetBoardSideMachineFYPCompletedEventHandler GetBoardSideMachineFYPCompleted;
        
        /// <remarks/>
        public event GetBoardSideMachineAXICompletedEventHandler GetBoardSideMachineAXICompleted;
        
        /// <remarks/>
        public event GetBoardSideMachineCompletedEventHandler GetBoardSideMachineCompleted;
        
        /// <remarks/>
        public event GetTesterAOICompletedEventHandler GetTesterAOICompleted;
        
        /// <remarks/>
        public event IDAssemblyCompletedEventHandler IDAssemblyCompleted;
        
        /// <remarks/>
        public event EPS_BoardWipMoveStatusCompletedEventHandler EPS_BoardWipMoveStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_BoardWipMove", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_BoardWipMove(string mesServer, string mesDataBase, int CustomerID, int WIPId, int RouteStepID, int EquipmentID, int userID, int NewAssyID) {
            object[] results = this.Invoke("EPS_BoardWipMove", new object[] {
                        mesServer,
                        mesDataBase,
                        CustomerID,
                        WIPId,
                        RouteStepID,
                        EquipmentID,
                        userID,
                        NewAssyID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_BoardWipMoveAsync(string mesServer, string mesDataBase, int CustomerID, int WIPId, int RouteStepID, int EquipmentID, int userID, int NewAssyID) {
            this.EPS_BoardWipMoveAsync(mesServer, mesDataBase, CustomerID, WIPId, RouteStepID, EquipmentID, userID, NewAssyID, null);
        }
        
        /// <remarks/>
        public void EPS_BoardWipMoveAsync(string mesServer, string mesDataBase, int CustomerID, int WIPId, int RouteStepID, int EquipmentID, int userID, int NewAssyID, object userState) {
            if ((this.EPS_BoardWipMoveOperationCompleted == null)) {
                this.EPS_BoardWipMoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_BoardWipMoveOperationCompleted);
            }
            this.InvokeAsync("EPS_BoardWipMove", new object[] {
                        mesServer,
                        mesDataBase,
                        CustomerID,
                        WIPId,
                        RouteStepID,
                        EquipmentID,
                        userID,
                        NewAssyID}, this.EPS_BoardWipMoveOperationCompleted, userState);
        }
        
        private void OnEPS_BoardWipMoveOperationCompleted(object arg) {
            if ((this.EPS_BoardWipMoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_BoardWipMoveCompleted(this, new EPS_BoardWipMoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/PassInspections", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PassInspections() {
            object[] results = this.Invoke("PassInspections", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PassInspectionsAsync() {
            this.PassInspectionsAsync(null);
        }
        
        /// <remarks/>
        public void PassInspectionsAsync(object userState) {
            if ((this.PassInspectionsOperationCompleted == null)) {
                this.PassInspectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassInspectionsOperationCompleted);
            }
            this.InvokeAsync("PassInspections", new object[0], this.PassInspectionsOperationCompleted, userState);
        }
        
        private void OnPassInspectionsOperationCompleted(object arg) {
            if ((this.PassInspectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassInspectionsCompleted(this, new PassInspectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/HistoryStatus", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HistoryStatus(string sSerial, string sStep) {
            object[] results = this.Invoke("HistoryStatus", new object[] {
                        sSerial,
                        sStep});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HistoryStatusAsync(string sSerial, string sStep) {
            this.HistoryStatusAsync(sSerial, sStep, null);
        }
        
        /// <remarks/>
        public void HistoryStatusAsync(string sSerial, string sStep, object userState) {
            if ((this.HistoryStatusOperationCompleted == null)) {
                this.HistoryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHistoryStatusOperationCompleted);
            }
            this.InvokeAsync("HistoryStatus", new object[] {
                        sSerial,
                        sStep}, this.HistoryStatusOperationCompleted, userState);
        }
        
        private void OnHistoryStatusOperationCompleted(object arg) {
            if ((this.HistoryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HistoryStatusCompleted(this, new HistoryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/HistoryByStepAndLoops", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable HistoryByStepAndLoops(string SerialNumber) {
            object[] results = this.Invoke("HistoryByStepAndLoops", new object[] {
                        SerialNumber});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void HistoryByStepAndLoopsAsync(string SerialNumber) {
            this.HistoryByStepAndLoopsAsync(SerialNumber, null);
        }
        
        /// <remarks/>
        public void HistoryByStepAndLoopsAsync(string SerialNumber, object userState) {
            if ((this.HistoryByStepAndLoopsOperationCompleted == null)) {
                this.HistoryByStepAndLoopsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHistoryByStepAndLoopsOperationCompleted);
            }
            this.InvokeAsync("HistoryByStepAndLoops", new object[] {
                        SerialNumber}, this.HistoryByStepAndLoopsOperationCompleted, userState);
        }
        
        private void OnHistoryByStepAndLoopsOperationCompleted(object arg) {
            if ((this.HistoryByStepAndLoopsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HistoryByStepAndLoopsCompleted(this, new HistoryByStepAndLoopsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/BoardInHold", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BoardInHold(int iWipID) {
            object[] results = this.Invoke("BoardInHold", new object[] {
                        iWipID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BoardInHoldAsync(int iWipID) {
            this.BoardInHoldAsync(iWipID, null);
        }
        
        /// <remarks/>
        public void BoardInHoldAsync(int iWipID, object userState) {
            if ((this.BoardInHoldOperationCompleted == null)) {
                this.BoardInHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBoardInHoldOperationCompleted);
            }
            this.InvokeAsync("BoardInHold", new object[] {
                        iWipID}, this.BoardInHoldOperationCompleted, userState);
        }
        
        private void OnBoardInHoldOperationCompleted(object arg) {
            if ((this.BoardInHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BoardInHoldCompleted(this, new BoardInHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IsScrap", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsScrap(int WipID) {
            object[] results = this.Invoke("IsScrap", new object[] {
                        WipID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsScrapAsync(int WipID) {
            this.IsScrapAsync(WipID, null);
        }
        
        /// <remarks/>
        public void IsScrapAsync(int WipID, object userState) {
            if ((this.IsScrapOperationCompleted == null)) {
                this.IsScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsScrapOperationCompleted);
            }
            this.InvokeAsync("IsScrap", new object[] {
                        WipID}, this.IsScrapOperationCompleted, userState);
        }
        
        private void OnIsScrapOperationCompleted(object arg) {
            if ((this.IsScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsScrapCompleted(this, new IsScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/LoopsByStep", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoopsByStep(string SerialNumber, string Step, int CustomerID) {
            object[] results = this.Invoke("LoopsByStep", new object[] {
                        SerialNumber,
                        Step,
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoopsByStepAsync(string SerialNumber, string Step, int CustomerID) {
            this.LoopsByStepAsync(SerialNumber, Step, CustomerID, null);
        }
        
        /// <remarks/>
        public void LoopsByStepAsync(string SerialNumber, string Step, int CustomerID, object userState) {
            if ((this.LoopsByStepOperationCompleted == null)) {
                this.LoopsByStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoopsByStepOperationCompleted);
            }
            this.InvokeAsync("LoopsByStep", new object[] {
                        SerialNumber,
                        Step,
                        CustomerID}, this.LoopsByStepOperationCompleted, userState);
        }
        
        private void OnLoopsByStepOperationCompleted(object arg) {
            if ((this.LoopsByStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoopsByStepCompleted(this, new LoopsByStepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetMaterialID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaterialID(int Assembly_ID, string LinkAssemblyNumber) {
            object[] results = this.Invoke("GetMaterialID", new object[] {
                        Assembly_ID,
                        LinkAssemblyNumber});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaterialIDAsync(int Assembly_ID, string LinkAssemblyNumber) {
            this.GetMaterialIDAsync(Assembly_ID, LinkAssemblyNumber, null);
        }
        
        /// <remarks/>
        public void GetMaterialIDAsync(int Assembly_ID, string LinkAssemblyNumber, object userState) {
            if ((this.GetMaterialIDOperationCompleted == null)) {
                this.GetMaterialIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialIDOperationCompleted);
            }
            this.InvokeAsync("GetMaterialID", new object[] {
                        Assembly_ID,
                        LinkAssemblyNumber}, this.GetMaterialIDOperationCompleted, userState);
        }
        
        private void OnGetMaterialIDOperationCompleted(object arg) {
            if ((this.GetMaterialIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaterialIDCompleted(this, new GetMaterialIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetRouteStepID_EquipmentID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRouteStepID_EquipmentID(string RouteText, string MAText, string SearchRouteStepText) {
            object[] results = this.Invoke("GetRouteStepID_EquipmentID", new object[] {
                        RouteText,
                        MAText,
                        SearchRouteStepText});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRouteStepID_EquipmentIDAsync(string RouteText, string MAText, string SearchRouteStepText) {
            this.GetRouteStepID_EquipmentIDAsync(RouteText, MAText, SearchRouteStepText, null);
        }
        
        /// <remarks/>
        public void GetRouteStepID_EquipmentIDAsync(string RouteText, string MAText, string SearchRouteStepText, object userState) {
            if ((this.GetRouteStepID_EquipmentIDOperationCompleted == null)) {
                this.GetRouteStepID_EquipmentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRouteStepID_EquipmentIDOperationCompleted);
            }
            this.InvokeAsync("GetRouteStepID_EquipmentID", new object[] {
                        RouteText,
                        MAText,
                        SearchRouteStepText}, this.GetRouteStepID_EquipmentIDOperationCompleted, userState);
        }
        
        private void OnGetRouteStepID_EquipmentIDOperationCompleted(object arg) {
            if ((this.GetRouteStepID_EquipmentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRouteStepID_EquipmentIDCompleted(this, new GetRouteStepID_EquipmentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_BatchInfo", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EPS_BatchInfo(string sBatch) {
            object[] results = this.Invoke("EPS_BatchInfo", new object[] {
                        sBatch});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_BatchInfoAsync(string sBatch) {
            this.EPS_BatchInfoAsync(sBatch, null);
        }
        
        /// <remarks/>
        public void EPS_BatchInfoAsync(string sBatch, object userState) {
            if ((this.EPS_BatchInfoOperationCompleted == null)) {
                this.EPS_BatchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_BatchInfoOperationCompleted);
            }
            this.InvokeAsync("EPS_BatchInfo", new object[] {
                        sBatch}, this.EPS_BatchInfoOperationCompleted, userState);
        }
        
        private void OnEPS_BatchInfoOperationCompleted(object arg) {
            if ((this.EPS_BatchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_BatchInfoCompleted(this, new EPS_BatchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_GetBatches", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EPS_GetBatches(string sBatch) {
            object[] results = this.Invoke("EPS_GetBatches", new object[] {
                        sBatch});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_GetBatchesAsync(string sBatch) {
            this.EPS_GetBatchesAsync(sBatch, null);
        }
        
        /// <remarks/>
        public void EPS_GetBatchesAsync(string sBatch, object userState) {
            if ((this.EPS_GetBatchesOperationCompleted == null)) {
                this.EPS_GetBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_GetBatchesOperationCompleted);
            }
            this.InvokeAsync("EPS_GetBatches", new object[] {
                        sBatch}, this.EPS_GetBatchesOperationCompleted, userState);
        }
        
        private void OnEPS_GetBatchesOperationCompleted(object arg) {
            if ((this.EPS_GetBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_GetBatchesCompleted(this, new EPS_GetBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_LinkedSN", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EPS_LinkedSN(int sNumber, int CustomerID) {
            object[] results = this.Invoke("EPS_LinkedSN", new object[] {
                        sNumber,
                        CustomerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_LinkedSNAsync(int sNumber, int CustomerID) {
            this.EPS_LinkedSNAsync(sNumber, CustomerID, null);
        }
        
        /// <remarks/>
        public void EPS_LinkedSNAsync(int sNumber, int CustomerID, object userState) {
            if ((this.EPS_LinkedSNOperationCompleted == null)) {
                this.EPS_LinkedSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_LinkedSNOperationCompleted);
            }
            this.InvokeAsync("EPS_LinkedSN", new object[] {
                        sNumber,
                        CustomerID}, this.EPS_LinkedSNOperationCompleted, userState);
        }
        
        private void OnEPS_LinkedSNOperationCompleted(object arg) {
            if ((this.EPS_LinkedSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_LinkedSNCompleted(this, new EPS_LinkedSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_ProgressionInspection", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_ProgressionInspection(string serialNumber) {
            object[] results = this.Invoke("EPS_ProgressionInspection", new object[] {
                        serialNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_ProgressionInspectionAsync(string serialNumber) {
            this.EPS_ProgressionInspectionAsync(serialNumber, null);
        }
        
        /// <remarks/>
        public void EPS_ProgressionInspectionAsync(string serialNumber, object userState) {
            if ((this.EPS_ProgressionInspectionOperationCompleted == null)) {
                this.EPS_ProgressionInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_ProgressionInspectionOperationCompleted);
            }
            this.InvokeAsync("EPS_ProgressionInspection", new object[] {
                        serialNumber}, this.EPS_ProgressionInspectionOperationCompleted, userState);
        }
        
        private void OnEPS_ProgressionInspectionOperationCompleted(object arg) {
            if ((this.EPS_ProgressionInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_ProgressionInspectionCompleted(this, new EPS_ProgressionInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_BatchSN", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EPS_BatchSN(string sBatch, int CustomerID, int UserID, int LangID) {
            object[] results = this.Invoke("EPS_BatchSN", new object[] {
                        sBatch,
                        CustomerID,
                        UserID,
                        LangID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_BatchSNAsync(string sBatch, int CustomerID, int UserID, int LangID) {
            this.EPS_BatchSNAsync(sBatch, CustomerID, UserID, LangID, null);
        }
        
        /// <remarks/>
        public void EPS_BatchSNAsync(string sBatch, int CustomerID, int UserID, int LangID, object userState) {
            if ((this.EPS_BatchSNOperationCompleted == null)) {
                this.EPS_BatchSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_BatchSNOperationCompleted);
            }
            this.InvokeAsync("EPS_BatchSN", new object[] {
                        sBatch,
                        CustomerID,
                        UserID,
                        LangID}, this.EPS_BatchSNOperationCompleted, userState);
        }
        
        private void OnEPS_BatchSNOperationCompleted(object arg) {
            if ((this.EPS_BatchSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_BatchSNCompleted(this, new EPS_BatchSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_LinkNonUniqueComponent", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_LinkNonUniqueComponent(int CustomerID, int WIP_ID, int LinkMaterialID, string LinkData, int RouteStepId, int EquipmentID) {
            object[] results = this.Invoke("EPS_LinkNonUniqueComponent", new object[] {
                        CustomerID,
                        WIP_ID,
                        LinkMaterialID,
                        LinkData,
                        RouteStepId,
                        EquipmentID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_LinkNonUniqueComponentAsync(int CustomerID, int WIP_ID, int LinkMaterialID, string LinkData, int RouteStepId, int EquipmentID) {
            this.EPS_LinkNonUniqueComponentAsync(CustomerID, WIP_ID, LinkMaterialID, LinkData, RouteStepId, EquipmentID, null);
        }
        
        /// <remarks/>
        public void EPS_LinkNonUniqueComponentAsync(int CustomerID, int WIP_ID, int LinkMaterialID, string LinkData, int RouteStepId, int EquipmentID, object userState) {
            if ((this.EPS_LinkNonUniqueComponentOperationCompleted == null)) {
                this.EPS_LinkNonUniqueComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_LinkNonUniqueComponentOperationCompleted);
            }
            this.InvokeAsync("EPS_LinkNonUniqueComponent", new object[] {
                        CustomerID,
                        WIP_ID,
                        LinkMaterialID,
                        LinkData,
                        RouteStepId,
                        EquipmentID}, this.EPS_LinkNonUniqueComponentOperationCompleted, userState);
        }
        
        private void OnEPS_LinkNonUniqueComponentOperationCompleted(object arg) {
            if ((this.EPS_LinkNonUniqueComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_LinkNonUniqueComponentCompleted(this, new EPS_LinkNonUniqueComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/JoinPanel", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool JoinPanel(string SerialNumber, int CustomerID) {
            object[] results = this.Invoke("JoinPanel", new object[] {
                        SerialNumber,
                        CustomerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void JoinPanelAsync(string SerialNumber, int CustomerID) {
            this.JoinPanelAsync(SerialNumber, CustomerID, null);
        }
        
        /// <remarks/>
        public void JoinPanelAsync(string SerialNumber, int CustomerID, object userState) {
            if ((this.JoinPanelOperationCompleted == null)) {
                this.JoinPanelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinPanelOperationCompleted);
            }
            this.InvokeAsync("JoinPanel", new object[] {
                        SerialNumber,
                        CustomerID}, this.JoinPanelOperationCompleted, userState);
        }
        
        private void OnJoinPanelOperationCompleted(object arg) {
            if ((this.JoinPanelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinPanelCompleted(this, new JoinPanelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/BreakOutPanel", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BreakOutPanel(string SerialNumber, int CustomerID) {
            object[] results = this.Invoke("BreakOutPanel", new object[] {
                        SerialNumber,
                        CustomerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BreakOutPanelAsync(string SerialNumber, int CustomerID) {
            this.BreakOutPanelAsync(SerialNumber, CustomerID, null);
        }
        
        /// <remarks/>
        public void BreakOutPanelAsync(string SerialNumber, int CustomerID, object userState) {
            if ((this.BreakOutPanelOperationCompleted == null)) {
                this.BreakOutPanelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBreakOutPanelOperationCompleted);
            }
            this.InvokeAsync("BreakOutPanel", new object[] {
                        SerialNumber,
                        CustomerID}, this.BreakOutPanelOperationCompleted, userState);
        }
        
        private void OnBreakOutPanelOperationCompleted(object arg) {
            if ((this.BreakOutPanelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BreakOutPanelCompleted(this, new BreakOutPanelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetNextAssembly", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNextAssembly(int AssemblyID) {
            object[] results = this.Invoke("GetNextAssembly", new object[] {
                        AssemblyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextAssemblyAsync(int AssemblyID) {
            this.GetNextAssemblyAsync(AssemblyID, null);
        }
        
        /// <remarks/>
        public void GetNextAssemblyAsync(int AssemblyID, object userState) {
            if ((this.GetNextAssemblyOperationCompleted == null)) {
                this.GetNextAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextAssemblyOperationCompleted);
            }
            this.InvokeAsync("GetNextAssembly", new object[] {
                        AssemblyID}, this.GetNextAssemblyOperationCompleted, userState);
        }
        
        private void OnGetNextAssemblyOperationCompleted(object arg) {
            if ((this.GetNextAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextAssemblyCompleted(this, new GetNextAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetTester_ID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTester_ID(string sCommonName) {
            object[] results = this.Invoke("GetTester_ID", new object[] {
                        sCommonName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTester_IDAsync(string sCommonName) {
            this.GetTester_IDAsync(sCommonName, null);
        }
        
        /// <remarks/>
        public void GetTester_IDAsync(string sCommonName, object userState) {
            if ((this.GetTester_IDOperationCompleted == null)) {
                this.GetTester_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTester_IDOperationCompleted);
            }
            this.InvokeAsync("GetTester_ID", new object[] {
                        sCommonName}, this.GetTester_IDOperationCompleted, userState);
        }
        
        private void OnGetTester_IDOperationCompleted(object arg) {
            if ((this.GetTester_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTester_IDCompleted(this, new GetTester_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetRouteStep_ID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRouteStep_ID(int RouteStep_Id) {
            object[] results = this.Invoke("GetRouteStep_ID", new object[] {
                        RouteStep_Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRouteStep_IDAsync(int RouteStep_Id) {
            this.GetRouteStep_IDAsync(RouteStep_Id, null);
        }
        
        /// <remarks/>
        public void GetRouteStep_IDAsync(int RouteStep_Id, object userState) {
            if ((this.GetRouteStep_IDOperationCompleted == null)) {
                this.GetRouteStep_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRouteStep_IDOperationCompleted);
            }
            this.InvokeAsync("GetRouteStep_ID", new object[] {
                        RouteStep_Id}, this.GetRouteStep_IDOperationCompleted, userState);
        }
        
        private void OnGetRouteStep_IDOperationCompleted(object arg) {
            if ((this.GetRouteStep_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRouteStep_IDCompleted(this, new GetRouteStep_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetDataEquipmentByBay", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataEquipmentByBay(string RouteStepName, string RouteText, string BayText) {
            object[] results = this.Invoke("GetDataEquipmentByBay", new object[] {
                        RouteStepName,
                        RouteText,
                        BayText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataEquipmentByBayAsync(string RouteStepName, string RouteText, string BayText) {
            this.GetDataEquipmentByBayAsync(RouteStepName, RouteText, BayText, null);
        }
        
        /// <remarks/>
        public void GetDataEquipmentByBayAsync(string RouteStepName, string RouteText, string BayText, object userState) {
            if ((this.GetDataEquipmentByBayOperationCompleted == null)) {
                this.GetDataEquipmentByBayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataEquipmentByBayOperationCompleted);
            }
            this.InvokeAsync("GetDataEquipmentByBay", new object[] {
                        RouteStepName,
                        RouteText,
                        BayText}, this.GetDataEquipmentByBayOperationCompleted, userState);
        }
        
        private void OnGetDataEquipmentByBayOperationCompleted(object arg) {
            if ((this.GetDataEquipmentByBayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataEquipmentByBayCompleted(this, new GetDataEquipmentByBayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetDataEquipment", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataEquipment(string RouteStepName, string RouteText) {
            object[] results = this.Invoke("GetDataEquipment", new object[] {
                        RouteStepName,
                        RouteText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataEquipmentAsync(string RouteStepName, string RouteText) {
            this.GetDataEquipmentAsync(RouteStepName, RouteText, null);
        }
        
        /// <remarks/>
        public void GetDataEquipmentAsync(string RouteStepName, string RouteText, object userState) {
            if ((this.GetDataEquipmentOperationCompleted == null)) {
                this.GetDataEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataEquipmentOperationCompleted);
            }
            this.InvokeAsync("GetDataEquipment", new object[] {
                        RouteStepName,
                        RouteText}, this.GetDataEquipmentOperationCompleted, userState);
        }
        
        private void OnGetDataEquipmentOperationCompleted(object arg) {
            if ((this.GetDataEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataEquipmentCompleted(this, new GetDataEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetUserMESID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserMESID(string WindowsUserID) {
            object[] results = this.Invoke("GetUserMESID", new object[] {
                        WindowsUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMESIDAsync(string WindowsUserID) {
            this.GetUserMESIDAsync(WindowsUserID, null);
        }
        
        /// <remarks/>
        public void GetUserMESIDAsync(string WindowsUserID, object userState) {
            if ((this.GetUserMESIDOperationCompleted == null)) {
                this.GetUserMESIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMESIDOperationCompleted);
            }
            this.InvokeAsync("GetUserMESID", new object[] {
                        WindowsUserID}, this.GetUserMESIDOperationCompleted, userState);
        }
        
        private void OnGetUserMESIDOperationCompleted(object arg) {
            if ((this.GetUserMESIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMESIDCompleted(this, new GetUserMESIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetDataProgression", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataProgression(string RouteStepName) {
            object[] results = this.Invoke("GetDataProgression", new object[] {
                        RouteStepName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataProgressionAsync(string RouteStepName) {
            this.GetDataProgressionAsync(RouteStepName, null);
        }
        
        /// <remarks/>
        public void GetDataProgressionAsync(string RouteStepName, object userState) {
            if ((this.GetDataProgressionOperationCompleted == null)) {
                this.GetDataProgressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataProgressionOperationCompleted);
            }
            this.InvokeAsync("GetDataProgression", new object[] {
                        RouteStepName}, this.GetDataProgressionOperationCompleted, userState);
        }
        
        private void OnGetDataProgressionOperationCompleted(object arg) {
            if ((this.GetDataProgressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataProgressionCompleted(this, new GetDataProgressionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetDataProgressionByRouteBay", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataProgressionByRouteBay(string RouteStepName, string BayName) {
            object[] results = this.Invoke("GetDataProgressionByRouteBay", new object[] {
                        RouteStepName,
                        BayName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataProgressionByRouteBayAsync(string RouteStepName, string BayName) {
            this.GetDataProgressionByRouteBayAsync(RouteStepName, BayName, null);
        }
        
        /// <remarks/>
        public void GetDataProgressionByRouteBayAsync(string RouteStepName, string BayName, object userState) {
            if ((this.GetDataProgressionByRouteBayOperationCompleted == null)) {
                this.GetDataProgressionByRouteBayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataProgressionByRouteBayOperationCompleted);
            }
            this.InvokeAsync("GetDataProgressionByRouteBay", new object[] {
                        RouteStepName,
                        BayName}, this.GetDataProgressionByRouteBayOperationCompleted, userState);
        }
        
        private void OnGetDataProgressionByRouteBayOperationCompleted(object arg) {
            if ((this.GetDataProgressionByRouteBayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataProgressionByRouteBayCompleted(this, new GetDataProgressionByRouteBayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetCheckPoint", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCheckPoint(string SerialNumber, string CheckProcess, int CustomerID, int AssemblyID) {
            object[] results = this.Invoke("GetCheckPoint", new object[] {
                        SerialNumber,
                        CheckProcess,
                        CustomerID,
                        AssemblyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckPointAsync(string SerialNumber, string CheckProcess, int CustomerID, int AssemblyID) {
            this.GetCheckPointAsync(SerialNumber, CheckProcess, CustomerID, AssemblyID, null);
        }
        
        /// <remarks/>
        public void GetCheckPointAsync(string SerialNumber, string CheckProcess, int CustomerID, int AssemblyID, object userState) {
            if ((this.GetCheckPointOperationCompleted == null)) {
                this.GetCheckPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckPointOperationCompleted);
            }
            this.InvokeAsync("GetCheckPoint", new object[] {
                        SerialNumber,
                        CheckProcess,
                        CustomerID,
                        AssemblyID}, this.GetCheckPointOperationCompleted, userState);
        }
        
        private void OnGetCheckPointOperationCompleted(object arg) {
            if ((this.GetCheckPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckPointCompleted(this, new GetCheckPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetTesterInfo", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTesterInfo(int PKTester) {
            object[] results = this.Invoke("GetTesterInfo", new object[] {
                        PKTester});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTesterInfoAsync(int PKTester) {
            this.GetTesterInfoAsync(PKTester, null);
        }
        
        /// <remarks/>
        public void GetTesterInfoAsync(int PKTester, object userState) {
            if ((this.GetTesterInfoOperationCompleted == null)) {
                this.GetTesterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTesterInfoOperationCompleted);
            }
            this.InvokeAsync("GetTesterInfo", new object[] {
                        PKTester}, this.GetTesterInfoOperationCompleted, userState);
        }
        
        private void OnGetTesterInfoOperationCompleted(object arg) {
            if ((this.GetTesterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTesterInfoCompleted(this, new GetTesterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_LinkUniqueComponent", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_LinkUniqueComponent(int CustomerID, int ParentWipID, int MaterialID, string LinkData, int RouteStepID, int EquipmentId, int userID, int LangID) {
            object[] results = this.Invoke("EPS_LinkUniqueComponent", new object[] {
                        CustomerID,
                        ParentWipID,
                        MaterialID,
                        LinkData,
                        RouteStepID,
                        EquipmentId,
                        userID,
                        LangID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_LinkUniqueComponentAsync(int CustomerID, int ParentWipID, int MaterialID, string LinkData, int RouteStepID, int EquipmentId, int userID, int LangID) {
            this.EPS_LinkUniqueComponentAsync(CustomerID, ParentWipID, MaterialID, LinkData, RouteStepID, EquipmentId, userID, LangID, null);
        }
        
        /// <remarks/>
        public void EPS_LinkUniqueComponentAsync(int CustomerID, int ParentWipID, int MaterialID, string LinkData, int RouteStepID, int EquipmentId, int userID, int LangID, object userState) {
            if ((this.EPS_LinkUniqueComponentOperationCompleted == null)) {
                this.EPS_LinkUniqueComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_LinkUniqueComponentOperationCompleted);
            }
            this.InvokeAsync("EPS_LinkUniqueComponent", new object[] {
                        CustomerID,
                        ParentWipID,
                        MaterialID,
                        LinkData,
                        RouteStepID,
                        EquipmentId,
                        userID,
                        LangID}, this.EPS_LinkUniqueComponentOperationCompleted, userState);
        }
        
        private void OnEPS_LinkUniqueComponentOperationCompleted(object arg) {
            if ((this.EPS_LinkUniqueComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_LinkUniqueComponentCompleted(this, new EPS_LinkUniqueComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetEquipmentID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEquipmentID(int RouteStep_ID) {
            object[] results = this.Invoke("GetEquipmentID", new object[] {
                        RouteStep_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEquipmentIDAsync(int RouteStep_ID) {
            this.GetEquipmentIDAsync(RouteStep_ID, null);
        }
        
        /// <remarks/>
        public void GetEquipmentIDAsync(int RouteStep_ID, object userState) {
            if ((this.GetEquipmentIDOperationCompleted == null)) {
                this.GetEquipmentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEquipmentIDOperationCompleted);
            }
            this.InvokeAsync("GetEquipmentID", new object[] {
                        RouteStep_ID}, this.GetEquipmentIDOperationCompleted, userState);
        }
        
        private void OnGetEquipmentIDOperationCompleted(object arg) {
            if ((this.GetEquipmentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEquipmentIDCompleted(this, new GetEquipmentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/SelectBySerialNumber", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectBySerialNumber(string sPanelSerial) {
            object[] results = this.Invoke("SelectBySerialNumber", new object[] {
                        sPanelSerial});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectBySerialNumberAsync(string sPanelSerial) {
            this.SelectBySerialNumberAsync(sPanelSerial, null);
        }
        
        /// <remarks/>
        public void SelectBySerialNumberAsync(string sPanelSerial, object userState) {
            if ((this.SelectBySerialNumberOperationCompleted == null)) {
                this.SelectBySerialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBySerialNumberOperationCompleted);
            }
            this.InvokeAsync("SelectBySerialNumber", new object[] {
                        sPanelSerial}, this.SelectBySerialNumberOperationCompleted, userState);
        }
        
        private void OnSelectBySerialNumberOperationCompleted(object arg) {
            if ((this.SelectBySerialNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBySerialNumberCompleted(this, new SelectBySerialNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByPanelWithCoordinates", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByPanelWithCoordinates(int iWIP_ID) {
            object[] results = this.Invoke("ListByPanelWithCoordinates", new object[] {
                        iWIP_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByPanelWithCoordinatesAsync(int iWIP_ID) {
            this.ListByPanelWithCoordinatesAsync(iWIP_ID, null);
        }
        
        /// <remarks/>
        public void ListByPanelWithCoordinatesAsync(int iWIP_ID, object userState) {
            if ((this.ListByPanelWithCoordinatesOperationCompleted == null)) {
                this.ListByPanelWithCoordinatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByPanelWithCoordinatesOperationCompleted);
            }
            this.InvokeAsync("ListByPanelWithCoordinates", new object[] {
                        iWIP_ID}, this.ListByPanelWithCoordinatesOperationCompleted, userState);
        }
        
        private void OnListByPanelWithCoordinatesOperationCompleted(object arg) {
            if ((this.ListByPanelWithCoordinatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByPanelWithCoordinatesCompleted(this, new ListByPanelWithCoordinatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListAllByWipID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListAllByWipID(int iWIP_ID) {
            object[] results = this.Invoke("ListAllByWipID", new object[] {
                        iWIP_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllByWipIDAsync(int iWIP_ID) {
            this.ListAllByWipIDAsync(iWIP_ID, null);
        }
        
        /// <remarks/>
        public void ListAllByWipIDAsync(int iWIP_ID, object userState) {
            if ((this.ListAllByWipIDOperationCompleted == null)) {
                this.ListAllByWipIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllByWipIDOperationCompleted);
            }
            this.InvokeAsync("ListAllByWipID", new object[] {
                        iWIP_ID}, this.ListAllByWipIDOperationCompleted, userState);
        }
        
        private void OnListAllByWipIDOperationCompleted(object arg) {
            if ((this.ListAllByWipIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllByWipIDCompleted(this, new ListAllByWipIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByBoard", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByBoard(int iWIP_ID) {
            object[] results = this.Invoke("ListByBoard", new object[] {
                        iWIP_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByBoardAsync(int iWIP_ID) {
            this.ListByBoardAsync(iWIP_ID, null);
        }
        
        /// <remarks/>
        public void ListByBoardAsync(int iWIP_ID, object userState) {
            if ((this.ListByBoardOperationCompleted == null)) {
                this.ListByBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByBoardOperationCompleted);
            }
            this.InvokeAsync("ListByBoard", new object[] {
                        iWIP_ID}, this.ListByBoardOperationCompleted, userState);
        }
        
        private void OnListByBoardOperationCompleted(object arg) {
            if ((this.ListByBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByBoardCompleted(this, new ListByBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByPanel", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByPanel(int iWIP_ID) {
            object[] results = this.Invoke("ListByPanel", new object[] {
                        iWIP_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByPanelAsync(int iWIP_ID) {
            this.ListByPanelAsync(iWIP_ID, null);
        }
        
        /// <remarks/>
        public void ListByPanelAsync(int iWIP_ID, object userState) {
            if ((this.ListByPanelOperationCompleted == null)) {
                this.ListByPanelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByPanelOperationCompleted);
            }
            this.InvokeAsync("ListByPanel", new object[] {
                        iWIP_ID}, this.ListByPanelOperationCompleted, userState);
        }
        
        private void OnListByPanelOperationCompleted(object arg) {
            if ((this.ListByPanelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByPanelCompleted(this, new ListByPanelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetAssemblySequence", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAssemblySequence(string sCustomer, string sAssembly, string sPanelSide) {
            object[] results = this.Invoke("GetAssemblySequence", new object[] {
                        sCustomer,
                        sAssembly,
                        sPanelSide});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssemblySequenceAsync(string sCustomer, string sAssembly, string sPanelSide) {
            this.GetAssemblySequenceAsync(sCustomer, sAssembly, sPanelSide, null);
        }
        
        /// <remarks/>
        public void GetAssemblySequenceAsync(string sCustomer, string sAssembly, string sPanelSide, object userState) {
            if ((this.GetAssemblySequenceOperationCompleted == null)) {
                this.GetAssemblySequenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssemblySequenceOperationCompleted);
            }
            this.InvokeAsync("GetAssemblySequence", new object[] {
                        sCustomer,
                        sAssembly,
                        sPanelSide}, this.GetAssemblySequenceOperationCompleted, userState);
        }
        
        private void OnGetAssemblySequenceOperationCompleted(object arg) {
            if ((this.GetAssemblySequenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssemblySequenceCompleted(this, new GetAssemblySequenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetWorkCellInMES", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkCellInMES() {
            object[] results = this.Invoke("GetWorkCellInMES", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkCellInMESAsync() {
            this.GetWorkCellInMESAsync(null);
        }
        
        /// <remarks/>
        public void GetWorkCellInMESAsync(object userState) {
            if ((this.GetWorkCellInMESOperationCompleted == null)) {
                this.GetWorkCellInMESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkCellInMESOperationCompleted);
            }
            this.InvokeAsync("GetWorkCellInMES", new object[0], this.GetWorkCellInMESOperationCompleted, userState);
        }
        
        private void OnGetWorkCellInMESOperationCompleted(object arg) {
            if ((this.GetWorkCellInMESCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkCellInMESCompleted(this, new GetWorkCellInMESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByNumber", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByNumber(string sAssemble, int iMaxRecords) {
            object[] results = this.Invoke("ListByNumber", new object[] {
                        sAssemble,
                        iMaxRecords});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByNumberAsync(string sAssemble, int iMaxRecords) {
            this.ListByNumberAsync(sAssemble, iMaxRecords, null);
        }
        
        /// <remarks/>
        public void ListByNumberAsync(string sAssemble, int iMaxRecords, object userState) {
            if ((this.ListByNumberOperationCompleted == null)) {
                this.ListByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByNumberOperationCompleted);
            }
            this.InvokeAsync("ListByNumber", new object[] {
                        sAssemble,
                        iMaxRecords}, this.ListByNumberOperationCompleted, userState);
        }
        
        private void OnListByNumberOperationCompleted(object arg) {
            if ((this.ListByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByNumberCompleted(this, new ListByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/UnitHistory", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UnitHistory(string sSerial, int iCostumerID) {
            object[] results = this.Invoke("UnitHistory", new object[] {
                        sSerial,
                        iCostumerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UnitHistoryAsync(string sSerial, int iCostumerID) {
            this.UnitHistoryAsync(sSerial, iCostumerID, null);
        }
        
        /// <remarks/>
        public void UnitHistoryAsync(string sSerial, int iCostumerID, object userState) {
            if ((this.UnitHistoryOperationCompleted == null)) {
                this.UnitHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitHistoryOperationCompleted);
            }
            this.InvokeAsync("UnitHistory", new object[] {
                        sSerial,
                        iCostumerID}, this.UnitHistoryOperationCompleted, userState);
        }
        
        private void OnUnitHistoryOperationCompleted(object arg) {
            if ((this.UnitHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitHistoryCompleted(this, new UnitHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/LoadInfoSMT", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadInfoSMT(int iEquipo) {
            object[] results = this.Invoke("LoadInfoSMT", new object[] {
                        iEquipo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadInfoSMTAsync(int iEquipo) {
            this.LoadInfoSMTAsync(iEquipo, null);
        }
        
        /// <remarks/>
        public void LoadInfoSMTAsync(int iEquipo, object userState) {
            if ((this.LoadInfoSMTOperationCompleted == null)) {
                this.LoadInfoSMTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadInfoSMTOperationCompleted);
            }
            this.InvokeAsync("LoadInfoSMT", new object[] {
                        iEquipo}, this.LoadInfoSMTOperationCompleted, userState);
        }
        
        private void OnLoadInfoSMTOperationCompleted(object arg) {
            if ((this.LoadInfoSMTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadInfoSMTCompleted(this, new LoadInfoSMTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/QM_CRDs", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QM_CRDs(int iWip_ID, int iAssembly_ID) {
            object[] results = this.Invoke("QM_CRDs", new object[] {
                        iWip_ID,
                        iAssembly_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QM_CRDsAsync(int iWip_ID, int iAssembly_ID) {
            this.QM_CRDsAsync(iWip_ID, iAssembly_ID, null);
        }
        
        /// <remarks/>
        public void QM_CRDsAsync(int iWip_ID, int iAssembly_ID, object userState) {
            if ((this.QM_CRDsOperationCompleted == null)) {
                this.QM_CRDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQM_CRDsOperationCompleted);
            }
            this.InvokeAsync("QM_CRDs", new object[] {
                        iWip_ID,
                        iAssembly_ID}, this.QM_CRDsOperationCompleted, userState);
        }
        
        private void OnQM_CRDsOperationCompleted(object arg) {
            if ((this.QM_CRDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QM_CRDsCompleted(this, new QM_CRDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/FeederTrayTrack", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FeederTrayTrack(string sFeeder) {
            object[] results = this.Invoke("FeederTrayTrack", new object[] {
                        sFeeder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FeederTrayTrackAsync(string sFeeder) {
            this.FeederTrayTrackAsync(sFeeder, null);
        }
        
        /// <remarks/>
        public void FeederTrayTrackAsync(string sFeeder, object userState) {
            if ((this.FeederTrayTrackOperationCompleted == null)) {
                this.FeederTrayTrackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeederTrayTrackOperationCompleted);
            }
            this.InvokeAsync("FeederTrayTrack", new object[] {
                        sFeeder}, this.FeederTrayTrackOperationCompleted, userState);
        }
        
        private void OnFeederTrayTrackOperationCompleted(object arg) {
            if ((this.FeederTrayTrackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeederTrayTrackCompleted(this, new FeederTrayTrackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EquiposListByActiveStatus", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EquiposListByActiveStatus() {
            object[] results = this.Invoke("EquiposListByActiveStatus", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EquiposListByActiveStatusAsync() {
            this.EquiposListByActiveStatusAsync(null);
        }
        
        /// <remarks/>
        public void EquiposListByActiveStatusAsync(object userState) {
            if ((this.EquiposListByActiveStatusOperationCompleted == null)) {
                this.EquiposListByActiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEquiposListByActiveStatusOperationCompleted);
            }
            this.InvokeAsync("EquiposListByActiveStatus", new object[0], this.EquiposListByActiveStatusOperationCompleted, userState);
        }
        
        private void OnEquiposListByActiveStatusOperationCompleted(object arg) {
            if ((this.EquiposListByActiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EquiposListByActiveStatusCompleted(this, new EquiposListByActiveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/QM_SelectByID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QM_SelectByID(int iAnalisysID) {
            object[] results = this.Invoke("QM_SelectByID", new object[] {
                        iAnalisysID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QM_SelectByIDAsync(int iAnalisysID) {
            this.QM_SelectByIDAsync(iAnalisysID, null);
        }
        
        /// <remarks/>
        public void QM_SelectByIDAsync(int iAnalisysID, object userState) {
            if ((this.QM_SelectByIDOperationCompleted == null)) {
                this.QM_SelectByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQM_SelectByIDOperationCompleted);
            }
            this.InvokeAsync("QM_SelectByID", new object[] {
                        iAnalisysID}, this.QM_SelectByIDOperationCompleted, userState);
        }
        
        private void OnQM_SelectByIDOperationCompleted(object arg) {
            if ((this.QM_SelectByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QM_SelectByIDCompleted(this, new QM_SelectByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/QM_SelectBySerialNumber", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QM_SelectBySerialNumber(string sString) {
            object[] results = this.Invoke("QM_SelectBySerialNumber", new object[] {
                        sString});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QM_SelectBySerialNumberAsync(string sString) {
            this.QM_SelectBySerialNumberAsync(sString, null);
        }
        
        /// <remarks/>
        public void QM_SelectBySerialNumberAsync(string sString, object userState) {
            if ((this.QM_SelectBySerialNumberOperationCompleted == null)) {
                this.QM_SelectBySerialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQM_SelectBySerialNumberOperationCompleted);
            }
            this.InvokeAsync("QM_SelectBySerialNumber", new object[] {
                        sString}, this.QM_SelectBySerialNumberOperationCompleted, userState);
        }
        
        private void OnQM_SelectBySerialNumberOperationCompleted(object arg) {
            if ((this.QM_SelectBySerialNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QM_SelectBySerialNumberCompleted(this, new QM_SelectBySerialNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/WP_Batch", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WP_Batch() {
            object[] results = this.Invoke("WP_Batch", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WP_BatchAsync() {
            this.WP_BatchAsync(null);
        }
        
        /// <remarks/>
        public void WP_BatchAsync(object userState) {
            if ((this.WP_BatchOperationCompleted == null)) {
                this.WP_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWP_BatchOperationCompleted);
            }
            this.InvokeAsync("WP_Batch", new object[0], this.WP_BatchOperationCompleted, userState);
        }
        
        private void OnWP_BatchOperationCompleted(object arg) {
            if ((this.WP_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WP_BatchCompleted(this, new WP_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/QM_Defects", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QM_Defects() {
            object[] results = this.Invoke("QM_Defects", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QM_DefectsAsync() {
            this.QM_DefectsAsync(null);
        }
        
        /// <remarks/>
        public void QM_DefectsAsync(object userState) {
            if ((this.QM_DefectsOperationCompleted == null)) {
                this.QM_DefectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQM_DefectsOperationCompleted);
            }
            this.InvokeAsync("QM_Defects", new object[0], this.QM_DefectsOperationCompleted, userState);
        }
        
        private void OnQM_DefectsOperationCompleted(object arg) {
            if ((this.QM_DefectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QM_DefectsCompleted(this, new QM_DefectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/CR_RouteSteps", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CR_RouteSteps() {
            object[] results = this.Invoke("CR_RouteSteps", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CR_RouteStepsAsync() {
            this.CR_RouteStepsAsync(null);
        }
        
        /// <remarks/>
        public void CR_RouteStepsAsync(object userState) {
            if ((this.CR_RouteStepsOperationCompleted == null)) {
                this.CR_RouteStepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCR_RouteStepsOperationCompleted);
            }
            this.InvokeAsync("CR_RouteSteps", new object[0], this.CR_RouteStepsOperationCompleted, userState);
        }
        
        private void OnCR_RouteStepsOperationCompleted(object arg) {
            if ((this.CR_RouteStepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CR_RouteStepsCompleted(this, new CR_RouteStepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/PlaceBoardOnHold", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PlaceBoardOnHold(int iWIP_ID, int iProcess_ID, int iHoldType_ID, int iHoldBy_ID, string sHoldEMO) {
            object[] results = this.Invoke("PlaceBoardOnHold", new object[] {
                        iWIP_ID,
                        iProcess_ID,
                        iHoldType_ID,
                        iHoldBy_ID,
                        sHoldEMO});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBoardOnHoldAsync(int iWIP_ID, int iProcess_ID, int iHoldType_ID, int iHoldBy_ID, string sHoldEMO) {
            this.PlaceBoardOnHoldAsync(iWIP_ID, iProcess_ID, iHoldType_ID, iHoldBy_ID, sHoldEMO, null);
        }
        
        /// <remarks/>
        public void PlaceBoardOnHoldAsync(int iWIP_ID, int iProcess_ID, int iHoldType_ID, int iHoldBy_ID, string sHoldEMO, object userState) {
            if ((this.PlaceBoardOnHoldOperationCompleted == null)) {
                this.PlaceBoardOnHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBoardOnHoldOperationCompleted);
            }
            this.InvokeAsync("PlaceBoardOnHold", new object[] {
                        iWIP_ID,
                        iProcess_ID,
                        iHoldType_ID,
                        iHoldBy_ID,
                        sHoldEMO}, this.PlaceBoardOnHoldOperationCompleted, userState);
        }
        
        private void OnPlaceBoardOnHoldOperationCompleted(object arg) {
            if ((this.PlaceBoardOnHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBoardOnHoldCompleted(this, new PlaceBoardOnHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ReleaseBoardOnHold", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReleaseBoardOnHold(int iWIP_ID, int iUpdate_ID, string HoldDateTime, string ReleaseMemo, int iReleasedBy_ID) {
            object[] results = this.Invoke("ReleaseBoardOnHold", new object[] {
                        iWIP_ID,
                        iUpdate_ID,
                        HoldDateTime,
                        ReleaseMemo,
                        iReleasedBy_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseBoardOnHoldAsync(int iWIP_ID, int iUpdate_ID, string HoldDateTime, string ReleaseMemo, int iReleasedBy_ID) {
            this.ReleaseBoardOnHoldAsync(iWIP_ID, iUpdate_ID, HoldDateTime, ReleaseMemo, iReleasedBy_ID, null);
        }
        
        /// <remarks/>
        public void ReleaseBoardOnHoldAsync(int iWIP_ID, int iUpdate_ID, string HoldDateTime, string ReleaseMemo, int iReleasedBy_ID, object userState) {
            if ((this.ReleaseBoardOnHoldOperationCompleted == null)) {
                this.ReleaseBoardOnHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseBoardOnHoldOperationCompleted);
            }
            this.InvokeAsync("ReleaseBoardOnHold", new object[] {
                        iWIP_ID,
                        iUpdate_ID,
                        HoldDateTime,
                        ReleaseMemo,
                        iReleasedBy_ID}, this.ReleaseBoardOnHoldOperationCompleted, userState);
        }
        
        private void OnReleaseBoardOnHoldOperationCompleted(object arg) {
            if ((this.ReleaseBoardOnHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseBoardOnHoldCompleted(this, new ReleaseBoardOnHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListActiveHoldsByWipID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListActiveHoldsByWipID(int iWipID) {
            object[] results = this.Invoke("ListActiveHoldsByWipID", new object[] {
                        iWipID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListActiveHoldsByWipIDAsync(int iWipID) {
            this.ListActiveHoldsByWipIDAsync(iWipID, null);
        }
        
        /// <remarks/>
        public void ListActiveHoldsByWipIDAsync(int iWipID, object userState) {
            if ((this.ListActiveHoldsByWipIDOperationCompleted == null)) {
                this.ListActiveHoldsByWipIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListActiveHoldsByWipIDOperationCompleted);
            }
            this.InvokeAsync("ListActiveHoldsByWipID", new object[] {
                        iWipID}, this.ListActiveHoldsByWipIDOperationCompleted, userState);
        }
        
        private void OnListActiveHoldsByWipIDOperationCompleted(object arg) {
            if ((this.ListActiveHoldsByWipIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListActiveHoldsByWipIDCompleted(this, new ListActiveHoldsByWipIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/SearchRepair", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchRepair(string ARTRepair) {
            object[] results = this.Invoke("SearchRepair", new object[] {
                        ARTRepair});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchRepairAsync(string ARTRepair) {
            this.SearchRepairAsync(ARTRepair, null);
        }
        
        /// <remarks/>
        public void SearchRepairAsync(string ARTRepair, object userState) {
            if ((this.SearchRepairOperationCompleted == null)) {
                this.SearchRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchRepairOperationCompleted);
            }
            this.InvokeAsync("SearchRepair", new object[] {
                        ARTRepair}, this.SearchRepairOperationCompleted, userState);
        }
        
        private void OnSearchRepairOperationCompleted(object arg) {
            if ((this.SearchRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchRepairCompleted(this, new SearchRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/SearchDefect", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchDefect(string ARTDefect) {
            object[] results = this.Invoke("SearchDefect", new object[] {
                        ARTDefect});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchDefectAsync(string ARTDefect) {
            this.SearchDefectAsync(ARTDefect, null);
        }
        
        /// <remarks/>
        public void SearchDefectAsync(string ARTDefect, object userState) {
            if ((this.SearchDefectOperationCompleted == null)) {
                this.SearchDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDefectOperationCompleted);
            }
            this.InvokeAsync("SearchDefect", new object[] {
                        ARTDefect}, this.SearchDefectOperationCompleted, userState);
        }
        
        private void OnSearchDefectOperationCompleted(object arg) {
            if ((this.SearchDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDefectCompleted(this, new SearchDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetRouteStep", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRouteStep(string SerialNumber) {
            object[] results = this.Invoke("GetRouteStep", new object[] {
                        SerialNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRouteStepAsync(string SerialNumber) {
            this.GetRouteStepAsync(SerialNumber, null);
        }
        
        /// <remarks/>
        public void GetRouteStepAsync(string SerialNumber, object userState) {
            if ((this.GetRouteStepOperationCompleted == null)) {
                this.GetRouteStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRouteStepOperationCompleted);
            }
            this.InvokeAsync("GetRouteStep", new object[] {
                        SerialNumber}, this.GetRouteStepOperationCompleted, userState);
        }
        
        private void OnGetRouteStepOperationCompleted(object arg) {
            if ((this.GetRouteStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRouteStepCompleted(this, new GetRouteStepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListActiveByCustomer", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListActiveByCustomer(int CustomerID) {
            object[] results = this.Invoke("ListActiveByCustomer", new object[] {
                        CustomerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListActiveByCustomerAsync(int CustomerID) {
            this.ListActiveByCustomerAsync(CustomerID, null);
        }
        
        /// <remarks/>
        public void ListActiveByCustomerAsync(int CustomerID, object userState) {
            if ((this.ListActiveByCustomerOperationCompleted == null)) {
                this.ListActiveByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListActiveByCustomerOperationCompleted);
            }
            this.InvokeAsync("ListActiveByCustomer", new object[] {
                        CustomerID}, this.ListActiveByCustomerOperationCompleted, userState);
        }
        
        private void OnListActiveByCustomerOperationCompleted(object arg) {
            if ((this.ListActiveByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListActiveByCustomerCompleted(this, new ListActiveByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/BoardHistoryReport", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BoardHistoryReport(string SerialNumber, int CustomerID) {
            object[] results = this.Invoke("BoardHistoryReport", new object[] {
                        SerialNumber,
                        CustomerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BoardHistoryReportAsync(string SerialNumber, int CustomerID) {
            this.BoardHistoryReportAsync(SerialNumber, CustomerID, null);
        }
        
        /// <remarks/>
        public void BoardHistoryReportAsync(string SerialNumber, int CustomerID, object userState) {
            if ((this.BoardHistoryReportOperationCompleted == null)) {
                this.BoardHistoryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBoardHistoryReportOperationCompleted);
            }
            this.InvokeAsync("BoardHistoryReport", new object[] {
                        SerialNumber,
                        CustomerID}, this.BoardHistoryReportOperationCompleted, userState);
        }
        
        private void OnBoardHistoryReportOperationCompleted(object arg) {
            if ((this.BoardHistoryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BoardHistoryReportCompleted(this, new BoardHistoryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_BirthHistory", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EPS_BirthHistory(string sSerialNumber, int CustomerID) {
            object[] results = this.Invoke("EPS_BirthHistory", new object[] {
                        sSerialNumber,
                        CustomerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_BirthHistoryAsync(string sSerialNumber, int CustomerID) {
            this.EPS_BirthHistoryAsync(sSerialNumber, CustomerID, null);
        }
        
        /// <remarks/>
        public void EPS_BirthHistoryAsync(string sSerialNumber, int CustomerID, object userState) {
            if ((this.EPS_BirthHistoryOperationCompleted == null)) {
                this.EPS_BirthHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_BirthHistoryOperationCompleted);
            }
            this.InvokeAsync("EPS_BirthHistory", new object[] {
                        sSerialNumber,
                        CustomerID}, this.EPS_BirthHistoryOperationCompleted, userState);
        }
        
        private void OnEPS_BirthHistoryOperationCompleted(object arg) {
            if ((this.EPS_BirthHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_BirthHistoryCompleted(this, new EPS_BirthHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_PackingSN", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EPS_PackingSN(string sBoxNumber, int CustomerID) {
            object[] results = this.Invoke("EPS_PackingSN", new object[] {
                        sBoxNumber,
                        CustomerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_PackingSNAsync(string sBoxNumber, int CustomerID) {
            this.EPS_PackingSNAsync(sBoxNumber, CustomerID, null);
        }
        
        /// <remarks/>
        public void EPS_PackingSNAsync(string sBoxNumber, int CustomerID, object userState) {
            if ((this.EPS_PackingSNOperationCompleted == null)) {
                this.EPS_PackingSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_PackingSNOperationCompleted);
            }
            this.InvokeAsync("EPS_PackingSN", new object[] {
                        sBoxNumber,
                        CustomerID}, this.EPS_PackingSNOperationCompleted, userState);
        }
        
        private void OnEPS_PackingSNOperationCompleted(object arg) {
            if ((this.EPS_PackingSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_PackingSNCompleted(this, new EPS_PackingSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetMaterialByBOM", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMaterialByBOM(int BOM_Id) {
            object[] results = this.Invoke("GetMaterialByBOM", new object[] {
                        BOM_Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaterialByBOMAsync(int BOM_Id) {
            this.GetMaterialByBOMAsync(BOM_Id, null);
        }
        
        /// <remarks/>
        public void GetMaterialByBOMAsync(int BOM_Id, object userState) {
            if ((this.GetMaterialByBOMOperationCompleted == null)) {
                this.GetMaterialByBOMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialByBOMOperationCompleted);
            }
            this.InvokeAsync("GetMaterialByBOM", new object[] {
                        BOM_Id}, this.GetMaterialByBOMOperationCompleted, userState);
        }
        
        private void OnGetMaterialByBOMOperationCompleted(object arg) {
            if ((this.GetMaterialByBOMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaterialByBOMCompleted(this, new GetMaterialByBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetMaterialInfo", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMaterialInfo(int Material_Id) {
            object[] results = this.Invoke("GetMaterialInfo", new object[] {
                        Material_Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaterialInfoAsync(int Material_Id) {
            this.GetMaterialInfoAsync(Material_Id, null);
        }
        
        /// <remarks/>
        public void GetMaterialInfoAsync(int Material_Id, object userState) {
            if ((this.GetMaterialInfoOperationCompleted == null)) {
                this.GetMaterialInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialInfoOperationCompleted);
            }
            this.InvokeAsync("GetMaterialInfo", new object[] {
                        Material_Id}, this.GetMaterialInfoOperationCompleted, userState);
        }
        
        private void OnGetMaterialInfoOperationCompleted(object arg) {
            if ((this.GetMaterialInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaterialInfoCompleted(this, new GetMaterialInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetCRDsByBOMMaterial", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCRDsByBOMMaterial(int BOM_ID, int Material_ID) {
            object[] results = this.Invoke("GetCRDsByBOMMaterial", new object[] {
                        BOM_ID,
                        Material_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCRDsByBOMMaterialAsync(int BOM_ID, int Material_ID) {
            this.GetCRDsByBOMMaterialAsync(BOM_ID, Material_ID, null);
        }
        
        /// <remarks/>
        public void GetCRDsByBOMMaterialAsync(int BOM_ID, int Material_ID, object userState) {
            if ((this.GetCRDsByBOMMaterialOperationCompleted == null)) {
                this.GetCRDsByBOMMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRDsByBOMMaterialOperationCompleted);
            }
            this.InvokeAsync("GetCRDsByBOMMaterial", new object[] {
                        BOM_ID,
                        Material_ID}, this.GetCRDsByBOMMaterialOperationCompleted, userState);
        }
        
        private void OnGetCRDsByBOMMaterialOperationCompleted(object arg) {
            if ((this.GetCRDsByBOMMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRDsByBOMMaterialCompleted(this, new GetCRDsByBOMMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/RevisionAssembly", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RevisionAssembly(string Number) {
            object[] results = this.Invoke("RevisionAssembly", new object[] {
                        Number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RevisionAssemblyAsync(string Number) {
            this.RevisionAssemblyAsync(Number, null);
        }
        
        /// <remarks/>
        public void RevisionAssemblyAsync(string Number, object userState) {
            if ((this.RevisionAssemblyOperationCompleted == null)) {
                this.RevisionAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevisionAssemblyOperationCompleted);
            }
            this.InvokeAsync("RevisionAssembly", new object[] {
                        Number}, this.RevisionAssemblyOperationCompleted, userState);
        }
        
        private void OnRevisionAssemblyOperationCompleted(object arg) {
            if ((this.RevisionAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevisionAssemblyCompleted(this, new RevisionAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/dtSQLQuery", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dtSQLQuery(string SQLServer, string SQLDatabase, string SQLString) {
            object[] results = this.Invoke("dtSQLQuery", new object[] {
                        SQLServer,
                        SQLDatabase,
                        SQLString});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dtSQLQueryAsync(string SQLServer, string SQLDatabase, string SQLString) {
            this.dtSQLQueryAsync(SQLServer, SQLDatabase, SQLString, null);
        }
        
        /// <remarks/>
        public void dtSQLQueryAsync(string SQLServer, string SQLDatabase, string SQLString, object userState) {
            if ((this.dtSQLQueryOperationCompleted == null)) {
                this.dtSQLQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndtSQLQueryOperationCompleted);
            }
            this.InvokeAsync("dtSQLQuery", new object[] {
                        SQLServer,
                        SQLDatabase,
                        SQLString}, this.dtSQLQueryOperationCompleted, userState);
        }
        
        private void OndtSQLQueryOperationCompleted(object arg) {
            if ((this.dtSQLQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dtSQLQueryCompleted(this, new dtSQLQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/SelectByNameAssembly", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectByNameAssembly(string Number, string Revision) {
            object[] results = this.Invoke("SelectByNameAssembly", new object[] {
                        Number,
                        Revision});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectByNameAssemblyAsync(string Number, string Revision) {
            this.SelectByNameAssemblyAsync(Number, Revision, null);
        }
        
        /// <remarks/>
        public void SelectByNameAssemblyAsync(string Number, string Revision, object userState) {
            if ((this.SelectByNameAssemblyOperationCompleted == null)) {
                this.SelectByNameAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectByNameAssemblyOperationCompleted);
            }
            this.InvokeAsync("SelectByNameAssembly", new object[] {
                        Number,
                        Revision}, this.SelectByNameAssemblyOperationCompleted, userState);
        }
        
        private void OnSelectByNameAssemblyOperationCompleted(object arg) {
            if ((this.SelectByNameAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectByNameAssemblyCompleted(this, new SelectByNameAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/SelectByNameAssemblyVersion", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectByNameAssemblyVersion(string Number, string Revision, string Version) {
            object[] results = this.Invoke("SelectByNameAssemblyVersion", new object[] {
                        Number,
                        Revision,
                        Version});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectByNameAssemblyVersionAsync(string Number, string Revision, string Version) {
            this.SelectByNameAssemblyVersionAsync(Number, Revision, Version, null);
        }
        
        /// <remarks/>
        public void SelectByNameAssemblyVersionAsync(string Number, string Revision, string Version, object userState) {
            if ((this.SelectByNameAssemblyVersionOperationCompleted == null)) {
                this.SelectByNameAssemblyVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectByNameAssemblyVersionOperationCompleted);
            }
            this.InvokeAsync("SelectByNameAssemblyVersion", new object[] {
                        Number,
                        Revision,
                        Version}, this.SelectByNameAssemblyVersionOperationCompleted, userState);
        }
        
        private void OnSelectByNameAssemblyVersionOperationCompleted(object arg) {
            if ((this.SelectByNameAssemblyVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectByNameAssemblyVersionCompleted(this, new SelectByNameAssemblyVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetCRDsByAssembly", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCRDsByAssembly(string Number, string Revision, string Version) {
            object[] results = this.Invoke("GetCRDsByAssembly", new object[] {
                        Number,
                        Revision,
                        Version});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCRDsByAssemblyAsync(string Number, string Revision, string Version) {
            this.GetCRDsByAssemblyAsync(Number, Revision, Version, null);
        }
        
        /// <remarks/>
        public void GetCRDsByAssemblyAsync(string Number, string Revision, string Version, object userState) {
            if ((this.GetCRDsByAssemblyOperationCompleted == null)) {
                this.GetCRDsByAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRDsByAssemblyOperationCompleted);
            }
            this.InvokeAsync("GetCRDsByAssembly", new object[] {
                        Number,
                        Revision,
                        Version}, this.GetCRDsByAssemblyOperationCompleted, userState);
        }
        
        private void OnGetCRDsByAssemblyOperationCompleted(object arg) {
            if ((this.GetCRDsByAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRDsByAssemblyCompleted(this, new GetCRDsByAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/Inspections", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Inspections(string Step) {
            object[] results = this.Invoke("Inspections", new object[] {
                        Step});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void InspectionsAsync(string Step) {
            this.InspectionsAsync(Step, null);
        }
        
        /// <remarks/>
        public void InspectionsAsync(string Step, object userState) {
            if ((this.InspectionsOperationCompleted == null)) {
                this.InspectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInspectionsOperationCompleted);
            }
            this.InvokeAsync("Inspections", new object[] {
                        Step}, this.InspectionsOperationCompleted, userState);
        }
        
        private void OnInspectionsOperationCompleted(object arg) {
            if ((this.InspectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InspectionsCompleted(this, new InspectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IDModel", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable IDModel(string Model, string Revision) {
            object[] results = this.Invoke("IDModel", new object[] {
                        Model,
                        Revision});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void IDModelAsync(string Model, string Revision) {
            this.IDModelAsync(Model, Revision, null);
        }
        
        /// <remarks/>
        public void IDModelAsync(string Model, string Revision, object userState) {
            if ((this.IDModelOperationCompleted == null)) {
                this.IDModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDModelOperationCompleted);
            }
            this.InvokeAsync("IDModel", new object[] {
                        Model,
                        Revision}, this.IDModelOperationCompleted, userState);
        }
        
        private void OnIDModelOperationCompleted(object arg) {
            if ((this.IDModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDModelCompleted(this, new IDModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/SheetCRDs", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SheetCRDs(string WipID, string AssemblyID) {
            object[] results = this.Invoke("SheetCRDs", new object[] {
                        WipID,
                        AssemblyID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SheetCRDsAsync(string WipID, string AssemblyID) {
            this.SheetCRDsAsync(WipID, AssemblyID, null);
        }
        
        /// <remarks/>
        public void SheetCRDsAsync(string WipID, string AssemblyID, object userState) {
            if ((this.SheetCRDsOperationCompleted == null)) {
                this.SheetCRDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSheetCRDsOperationCompleted);
            }
            this.InvokeAsync("SheetCRDs", new object[] {
                        WipID,
                        AssemblyID}, this.SheetCRDsOperationCompleted, userState);
        }
        
        private void OnSheetCRDsOperationCompleted(object arg) {
            if ((this.SheetCRDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SheetCRDsCompleted(this, new SheetCRDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_LinkChildBoard", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_LinkChildBoard(int CustomerID, int ParentWipID, int MaterialID, int ChildAssemblyID, string ChildBoardSerial, int RouteStepID, int EquipmentID, int UserID, int LangID) {
            object[] results = this.Invoke("EPS_LinkChildBoard", new object[] {
                        CustomerID,
                        ParentWipID,
                        MaterialID,
                        ChildAssemblyID,
                        ChildBoardSerial,
                        RouteStepID,
                        EquipmentID,
                        UserID,
                        LangID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_LinkChildBoardAsync(int CustomerID, int ParentWipID, int MaterialID, int ChildAssemblyID, string ChildBoardSerial, int RouteStepID, int EquipmentID, int UserID, int LangID) {
            this.EPS_LinkChildBoardAsync(CustomerID, ParentWipID, MaterialID, ChildAssemblyID, ChildBoardSerial, RouteStepID, EquipmentID, UserID, LangID, null);
        }
        
        /// <remarks/>
        public void EPS_LinkChildBoardAsync(int CustomerID, int ParentWipID, int MaterialID, int ChildAssemblyID, string ChildBoardSerial, int RouteStepID, int EquipmentID, int UserID, int LangID, object userState) {
            if ((this.EPS_LinkChildBoardOperationCompleted == null)) {
                this.EPS_LinkChildBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_LinkChildBoardOperationCompleted);
            }
            this.InvokeAsync("EPS_LinkChildBoard", new object[] {
                        CustomerID,
                        ParentWipID,
                        MaterialID,
                        ChildAssemblyID,
                        ChildBoardSerial,
                        RouteStepID,
                        EquipmentID,
                        UserID,
                        LangID}, this.EPS_LinkChildBoardOperationCompleted, userState);
        }
        
        private void OnEPS_LinkChildBoardOperationCompleted(object arg) {
            if ((this.EPS_LinkChildBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_LinkChildBoardCompleted(this, new EPS_LinkChildBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_CreateBoard", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EPS_CreateBoard(int CustomerID, string SerialNumber, int AssemblyID, int RouteStepID, int EquipmentID, int UserID, int LangID) {
            object[] results = this.Invoke("EPS_CreateBoard", new object[] {
                        CustomerID,
                        SerialNumber,
                        AssemblyID,
                        RouteStepID,
                        EquipmentID,
                        UserID,
                        LangID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_CreateBoardAsync(int CustomerID, string SerialNumber, int AssemblyID, int RouteStepID, int EquipmentID, int UserID, int LangID) {
            this.EPS_CreateBoardAsync(CustomerID, SerialNumber, AssemblyID, RouteStepID, EquipmentID, UserID, LangID, null);
        }
        
        /// <remarks/>
        public void EPS_CreateBoardAsync(int CustomerID, string SerialNumber, int AssemblyID, int RouteStepID, int EquipmentID, int UserID, int LangID, object userState) {
            if ((this.EPS_CreateBoardOperationCompleted == null)) {
                this.EPS_CreateBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_CreateBoardOperationCompleted);
            }
            this.InvokeAsync("EPS_CreateBoard", new object[] {
                        CustomerID,
                        SerialNumber,
                        AssemblyID,
                        RouteStepID,
                        EquipmentID,
                        UserID,
                        LangID}, this.EPS_CreateBoardOperationCompleted, userState);
        }
        
        private void OnEPS_CreateBoardOperationCompleted(object arg) {
            if ((this.EPS_CreateBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_CreateBoardCompleted(this, new EPS_CreateBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_Unlink", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_Unlink(string mesServer, string mesDataBase, int CustomerID, string LinkedParentSN, string LinkMaterialID, string strChildSerialNum, int userID, int LangID) {
            object[] results = this.Invoke("EPS_Unlink", new object[] {
                        mesServer,
                        mesDataBase,
                        CustomerID,
                        LinkedParentSN,
                        LinkMaterialID,
                        strChildSerialNum,
                        userID,
                        LangID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_UnlinkAsync(string mesServer, string mesDataBase, int CustomerID, string LinkedParentSN, string LinkMaterialID, string strChildSerialNum, int userID, int LangID) {
            this.EPS_UnlinkAsync(mesServer, mesDataBase, CustomerID, LinkedParentSN, LinkMaterialID, strChildSerialNum, userID, LangID, null);
        }
        
        /// <remarks/>
        public void EPS_UnlinkAsync(string mesServer, string mesDataBase, int CustomerID, string LinkedParentSN, string LinkMaterialID, string strChildSerialNum, int userID, int LangID, object userState) {
            if ((this.EPS_UnlinkOperationCompleted == null)) {
                this.EPS_UnlinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_UnlinkOperationCompleted);
            }
            this.InvokeAsync("EPS_Unlink", new object[] {
                        mesServer,
                        mesDataBase,
                        CustomerID,
                        LinkedParentSN,
                        LinkMaterialID,
                        strChildSerialNum,
                        userID,
                        LangID}, this.EPS_UnlinkOperationCompleted, userState);
        }
        
        private void OnEPS_UnlinkOperationCompleted(object arg) {
            if ((this.EPS_UnlinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_UnlinkCompleted(this, new EPS_UnlinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByLinkObjectID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByLinkObjectID(string mesServer, string mesDataBase, int LinkObjectID, string PartialKey, int maxCount, int Language_ID) {
            object[] results = this.Invoke("ListByLinkObjectID", new object[] {
                        mesServer,
                        mesDataBase,
                        LinkObjectID,
                        PartialKey,
                        maxCount,
                        Language_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByLinkObjectIDAsync(string mesServer, string mesDataBase, int LinkObjectID, string PartialKey, int maxCount, int Language_ID) {
            this.ListByLinkObjectIDAsync(mesServer, mesDataBase, LinkObjectID, PartialKey, maxCount, Language_ID, null);
        }
        
        /// <remarks/>
        public void ListByLinkObjectIDAsync(string mesServer, string mesDataBase, int LinkObjectID, string PartialKey, int maxCount, int Language_ID, object userState) {
            if ((this.ListByLinkObjectIDOperationCompleted == null)) {
                this.ListByLinkObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByLinkObjectIDOperationCompleted);
            }
            this.InvokeAsync("ListByLinkObjectID", new object[] {
                        mesServer,
                        mesDataBase,
                        LinkObjectID,
                        PartialKey,
                        maxCount,
                        Language_ID}, this.ListByLinkObjectIDOperationCompleted, userState);
        }
        
        private void OnListByLinkObjectIDOperationCompleted(object arg) {
            if ((this.ListByLinkObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByLinkObjectIDCompleted(this, new ListByLinkObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByCustomerID", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByCustomerID(string mesServer, string mesDataBase, int customer_ID, string PartialKey, int maxCount, int Language_ID) {
            object[] results = this.Invoke("ListByCustomerID", new object[] {
                        mesServer,
                        mesDataBase,
                        customer_ID,
                        PartialKey,
                        maxCount,
                        Language_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByCustomerIDAsync(string mesServer, string mesDataBase, int customer_ID, string PartialKey, int maxCount, int Language_ID) {
            this.ListByCustomerIDAsync(mesServer, mesDataBase, customer_ID, PartialKey, maxCount, Language_ID, null);
        }
        
        /// <remarks/>
        public void ListByCustomerIDAsync(string mesServer, string mesDataBase, int customer_ID, string PartialKey, int maxCount, int Language_ID, object userState) {
            if ((this.ListByCustomerIDOperationCompleted == null)) {
                this.ListByCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByCustomerIDOperationCompleted);
            }
            this.InvokeAsync("ListByCustomerID", new object[] {
                        mesServer,
                        mesDataBase,
                        customer_ID,
                        PartialKey,
                        maxCount,
                        Language_ID}, this.ListByCustomerIDOperationCompleted, userState);
        }
        
        private void OnListByCustomerIDOperationCompleted(object arg) {
            if ((this.ListByCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByCustomerIDCompleted(this, new ListByCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByCustomerName", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByCustomerName(string mesServer, string mesDataBase, string customerName, string divisionText, string assemblyName, int Language_ID) {
            object[] results = this.Invoke("ListByCustomerName", new object[] {
                        mesServer,
                        mesDataBase,
                        customerName,
                        divisionText,
                        assemblyName,
                        Language_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByCustomerNameAsync(string mesServer, string mesDataBase, string customerName, string divisionText, string assemblyName, int Language_ID) {
            this.ListByCustomerNameAsync(mesServer, mesDataBase, customerName, divisionText, assemblyName, Language_ID, null);
        }
        
        /// <remarks/>
        public void ListByCustomerNameAsync(string mesServer, string mesDataBase, string customerName, string divisionText, string assemblyName, int Language_ID, object userState) {
            if ((this.ListByCustomerNameOperationCompleted == null)) {
                this.ListByCustomerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByCustomerNameOperationCompleted);
            }
            this.InvokeAsync("ListByCustomerName", new object[] {
                        mesServer,
                        mesDataBase,
                        customerName,
                        divisionText,
                        assemblyName,
                        Language_ID}, this.ListByCustomerNameOperationCompleted, userState);
        }
        
        private void OnListByCustomerNameOperationCompleted(object arg) {
            if ((this.ListByCustomerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByCustomerNameCompleted(this, new ListByCustomerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/ListByProperty", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListByProperty(string mesServer, string mesDataBase, int property_id, string partialKey, int MaxCount, int Language_id) {
            object[] results = this.Invoke("ListByProperty", new object[] {
                        mesServer,
                        mesDataBase,
                        property_id,
                        partialKey,
                        MaxCount,
                        Language_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListByPropertyAsync(string mesServer, string mesDataBase, int property_id, string partialKey, int MaxCount, int Language_id) {
            this.ListByPropertyAsync(mesServer, mesDataBase, property_id, partialKey, MaxCount, Language_id, null);
        }
        
        /// <remarks/>
        public void ListByPropertyAsync(string mesServer, string mesDataBase, int property_id, string partialKey, int MaxCount, int Language_id, object userState) {
            if ((this.ListByPropertyOperationCompleted == null)) {
                this.ListByPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListByPropertyOperationCompleted);
            }
            this.InvokeAsync("ListByProperty", new object[] {
                        mesServer,
                        mesDataBase,
                        property_id,
                        partialKey,
                        MaxCount,
                        Language_id}, this.ListByPropertyOperationCompleted, userState);
        }
        
        private void OnListByPropertyOperationCompleted(object arg) {
            if ((this.ListByPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListByPropertyCompleted(this, new ListByPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/StepStatus", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StepStatus(int Wip_ID, string Step) {
            object[] results = this.Invoke("StepStatus", new object[] {
                        Wip_ID,
                        Step});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StepStatusAsync(int Wip_ID, string Step) {
            this.StepStatusAsync(Wip_ID, Step, null);
        }
        
        /// <remarks/>
        public void StepStatusAsync(int Wip_ID, string Step, object userState) {
            if ((this.StepStatusOperationCompleted == null)) {
                this.StepStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStepStatusOperationCompleted);
            }
            this.InvokeAsync("StepStatus", new object[] {
                        Wip_ID,
                        Step}, this.StepStatusOperationCompleted, userState);
        }
        
        private void OnStepStatusOperationCompleted(object arg) {
            if ((this.StepStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StepStatusCompleted(this, new StepStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IStepStatus", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IStepStatus(int Wip_ID, string Step) {
            object[] results = this.Invoke("IStepStatus", new object[] {
                        Wip_ID,
                        Step});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IStepStatusAsync(int Wip_ID, string Step) {
            this.IStepStatusAsync(Wip_ID, Step, null);
        }
        
        /// <remarks/>
        public void IStepStatusAsync(int Wip_ID, string Step, object userState) {
            if ((this.IStepStatusOperationCompleted == null)) {
                this.IStepStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIStepStatusOperationCompleted);
            }
            this.InvokeAsync("IStepStatus", new object[] {
                        Wip_ID,
                        Step}, this.IStepStatusOperationCompleted, userState);
        }
        
        private void OnIStepStatusOperationCompleted(object arg) {
            if ((this.IStepStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IStepStatusCompleted(this, new IStepStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetStepStatus", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStepStatus(int Wip_ID, string Step) {
            object[] results = this.Invoke("GetStepStatus", new object[] {
                        Wip_ID,
                        Step});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStepStatusAsync(int Wip_ID, string Step) {
            this.GetStepStatusAsync(Wip_ID, Step, null);
        }
        
        /// <remarks/>
        public void GetStepStatusAsync(int Wip_ID, string Step, object userState) {
            if ((this.GetStepStatusOperationCompleted == null)) {
                this.GetStepStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStepStatusOperationCompleted);
            }
            this.InvokeAsync("GetStepStatus", new object[] {
                        Wip_ID,
                        Step}, this.GetStepStatusOperationCompleted, userState);
        }
        
        private void OnGetStepStatusOperationCompleted(object arg) {
            if ((this.GetStepStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStepStatusCompleted(this, new GetStepStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/Diagnostics", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Diagnostics() {
            object[] results = this.Invoke("Diagnostics", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void DiagnosticsAsync() {
            this.DiagnosticsAsync(null);
        }
        
        /// <remarks/>
        public void DiagnosticsAsync(object userState) {
            if ((this.DiagnosticsOperationCompleted == null)) {
                this.DiagnosticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDiagnosticsOperationCompleted);
            }
            this.InvokeAsync("Diagnostics", new object[0], this.DiagnosticsOperationCompleted, userState);
        }
        
        private void OnDiagnosticsOperationCompleted(object arg) {
            if ((this.DiagnosticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DiagnosticsCompleted(this, new DiagnosticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/Repair", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Repair() {
            object[] results = this.Invoke("Repair", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RepairAsync() {
            this.RepairAsync(null);
        }
        
        /// <remarks/>
        public void RepairAsync(object userState) {
            if ((this.RepairOperationCompleted == null)) {
                this.RepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepairOperationCompleted);
            }
            this.InvokeAsync("Repair", new object[0], this.RepairOperationCompleted, userState);
        }
        
        private void OnRepairOperationCompleted(object arg) {
            if ((this.RepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepairCompleted(this, new RepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetBoardSide", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBoardSide(string Assembly, string Cell, string Line, out string strAssembly) {
            object[] results = this.Invoke("GetBoardSide", new object[] {
                        Assembly,
                        Cell,
                        Line});
            strAssembly = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoardSideAsync(string Assembly, string Cell, string Line) {
            this.GetBoardSideAsync(Assembly, Cell, Line, null);
        }
        
        /// <remarks/>
        public void GetBoardSideAsync(string Assembly, string Cell, string Line, object userState) {
            if ((this.GetBoardSideOperationCompleted == null)) {
                this.GetBoardSideOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoardSideOperationCompleted);
            }
            this.InvokeAsync("GetBoardSide", new object[] {
                        Assembly,
                        Cell,
                        Line}, this.GetBoardSideOperationCompleted, userState);
        }
        
        private void OnGetBoardSideOperationCompleted(object arg) {
            if ((this.GetBoardSideCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoardSideCompleted(this, new GetBoardSideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IsMaster", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsMaster(string SerialNumber, string Plataforma, out System.DateTime FechaBaja) {
            object[] results = this.Invoke("IsMaster", new object[] {
                        SerialNumber,
                        Plataforma});
            FechaBaja = ((System.DateTime)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsMasterAsync(string SerialNumber, string Plataforma) {
            this.IsMasterAsync(SerialNumber, Plataforma, null);
        }
        
        /// <remarks/>
        public void IsMasterAsync(string SerialNumber, string Plataforma, object userState) {
            if ((this.IsMasterOperationCompleted == null)) {
                this.IsMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsMasterOperationCompleted);
            }
            this.InvokeAsync("IsMaster", new object[] {
                        SerialNumber,
                        Plataforma}, this.IsMasterOperationCompleted, userState);
        }
        
        private void OnIsMasterOperationCompleted(object arg) {
            if ((this.IsMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsMasterCompleted(this, new IsMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IsMasterModel", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsMasterModel(string SerialNumber, string Plataforma, string PartNumber, out System.DateTime FechaBaja) {
            object[] results = this.Invoke("IsMasterModel", new object[] {
                        SerialNumber,
                        Plataforma,
                        PartNumber});
            FechaBaja = ((System.DateTime)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsMasterModelAsync(string SerialNumber, string Plataforma, string PartNumber) {
            this.IsMasterModelAsync(SerialNumber, Plataforma, PartNumber, null);
        }
        
        /// <remarks/>
        public void IsMasterModelAsync(string SerialNumber, string Plataforma, string PartNumber, object userState) {
            if ((this.IsMasterModelOperationCompleted == null)) {
                this.IsMasterModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsMasterModelOperationCompleted);
            }
            this.InvokeAsync("IsMasterModel", new object[] {
                        SerialNumber,
                        Plataforma,
                        PartNumber}, this.IsMasterModelOperationCompleted, userState);
        }
        
        private void OnIsMasterModelOperationCompleted(object arg) {
            if ((this.IsMasterModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsMasterModelCompleted(this, new IsMasterModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IsMasterType", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsMasterType(string SerialNumber, string Plataforma, out System.DateTime FechaBaja) {
            object[] results = this.Invoke("IsMasterType", new object[] {
                        SerialNumber,
                        Plataforma});
            FechaBaja = ((System.DateTime)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsMasterTypeAsync(string SerialNumber, string Plataforma) {
            this.IsMasterTypeAsync(SerialNumber, Plataforma, null);
        }
        
        /// <remarks/>
        public void IsMasterTypeAsync(string SerialNumber, string Plataforma, object userState) {
            if ((this.IsMasterTypeOperationCompleted == null)) {
                this.IsMasterTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsMasterTypeOperationCompleted);
            }
            this.InvokeAsync("IsMasterType", new object[] {
                        SerialNumber,
                        Plataforma}, this.IsMasterTypeOperationCompleted, userState);
        }
        
        private void OnIsMasterTypeOperationCompleted(object arg) {
            if ((this.IsMasterTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsMasterTypeCompleted(this, new IsMasterTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetBoardSideMachineFYP", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBoardSideMachineFYP(string Assembly, string Cell, string PKMachine) {
            object[] results = this.Invoke("GetBoardSideMachineFYP", new object[] {
                        Assembly,
                        Cell,
                        PKMachine});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoardSideMachineFYPAsync(string Assembly, string Cell, string PKMachine) {
            this.GetBoardSideMachineFYPAsync(Assembly, Cell, PKMachine, null);
        }
        
        /// <remarks/>
        public void GetBoardSideMachineFYPAsync(string Assembly, string Cell, string PKMachine, object userState) {
            if ((this.GetBoardSideMachineFYPOperationCompleted == null)) {
                this.GetBoardSideMachineFYPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoardSideMachineFYPOperationCompleted);
            }
            this.InvokeAsync("GetBoardSideMachineFYP", new object[] {
                        Assembly,
                        Cell,
                        PKMachine}, this.GetBoardSideMachineFYPOperationCompleted, userState);
        }
        
        private void OnGetBoardSideMachineFYPOperationCompleted(object arg) {
            if ((this.GetBoardSideMachineFYPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoardSideMachineFYPCompleted(this, new GetBoardSideMachineFYPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetBoardSideMachineAXI", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBoardSideMachineAXI(string Assembly, string Cell, string PKMachine) {
            object[] results = this.Invoke("GetBoardSideMachineAXI", new object[] {
                        Assembly,
                        Cell,
                        PKMachine});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoardSideMachineAXIAsync(string Assembly, string Cell, string PKMachine) {
            this.GetBoardSideMachineAXIAsync(Assembly, Cell, PKMachine, null);
        }
        
        /// <remarks/>
        public void GetBoardSideMachineAXIAsync(string Assembly, string Cell, string PKMachine, object userState) {
            if ((this.GetBoardSideMachineAXIOperationCompleted == null)) {
                this.GetBoardSideMachineAXIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoardSideMachineAXIOperationCompleted);
            }
            this.InvokeAsync("GetBoardSideMachineAXI", new object[] {
                        Assembly,
                        Cell,
                        PKMachine}, this.GetBoardSideMachineAXIOperationCompleted, userState);
        }
        
        private void OnGetBoardSideMachineAXIOperationCompleted(object arg) {
            if ((this.GetBoardSideMachineAXICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoardSideMachineAXICompleted(this, new GetBoardSideMachineAXICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetBoardSideMachine", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBoardSideMachine(string Assembly, string Cell, string PKMachine, out string strAssembly) {
            object[] results = this.Invoke("GetBoardSideMachine", new object[] {
                        Assembly,
                        Cell,
                        PKMachine});
            strAssembly = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoardSideMachineAsync(string Assembly, string Cell, string PKMachine) {
            this.GetBoardSideMachineAsync(Assembly, Cell, PKMachine, null);
        }
        
        /// <remarks/>
        public void GetBoardSideMachineAsync(string Assembly, string Cell, string PKMachine, object userState) {
            if ((this.GetBoardSideMachineOperationCompleted == null)) {
                this.GetBoardSideMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoardSideMachineOperationCompleted);
            }
            this.InvokeAsync("GetBoardSideMachine", new object[] {
                        Assembly,
                        Cell,
                        PKMachine}, this.GetBoardSideMachineOperationCompleted, userState);
        }
        
        private void OnGetBoardSideMachineOperationCompleted(object arg) {
            if ((this.GetBoardSideMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoardSideMachineCompleted(this, new GetBoardSideMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/GetTesterAOI", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTesterAOI(string BoardSide, string Cell, string PKMachine) {
            object[] results = this.Invoke("GetTesterAOI", new object[] {
                        BoardSide,
                        Cell,
                        PKMachine});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTesterAOIAsync(string BoardSide, string Cell, string PKMachine) {
            this.GetTesterAOIAsync(BoardSide, Cell, PKMachine, null);
        }
        
        /// <remarks/>
        public void GetTesterAOIAsync(string BoardSide, string Cell, string PKMachine, object userState) {
            if ((this.GetTesterAOIOperationCompleted == null)) {
                this.GetTesterAOIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTesterAOIOperationCompleted);
            }
            this.InvokeAsync("GetTesterAOI", new object[] {
                        BoardSide,
                        Cell,
                        PKMachine}, this.GetTesterAOIOperationCompleted, userState);
        }
        
        private void OnGetTesterAOIOperationCompleted(object arg) {
            if ((this.GetTesterAOICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTesterAOICompleted(this, new GetTesterAOICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/IDAssembly", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable IDAssembly(string Number, string Revision, string Version) {
            object[] results = this.Invoke("IDAssembly", new object[] {
                        Number,
                        Revision,
                        Version});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void IDAssemblyAsync(string Number, string Revision, string Version) {
            this.IDAssemblyAsync(Number, Revision, Version, null);
        }
        
        /// <remarks/>
        public void IDAssemblyAsync(string Number, string Revision, string Version, object userState) {
            if ((this.IDAssemblyOperationCompleted == null)) {
                this.IDAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDAssemblyOperationCompleted);
            }
            this.InvokeAsync("IDAssembly", new object[] {
                        Number,
                        Revision,
                        Version}, this.IDAssemblyOperationCompleted, userState);
        }
        
        private void OnIDAssemblyOperationCompleted(object arg) {
            if ((this.IDAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDAssemblyCompleted(this, new IDAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://chimestis10/webservices/EPS_BoardWipMoveStatus", RequestNamespace="http://chimestis10/webservices/", ResponseNamespace="http://chimestis10/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EPS_BoardWipMoveStatus(string mesServer, string mesDataBase, int CustomerID, int WIPId, int RouteStepID, int EquipmentID, int userID, int NewAssyID, int Status) {
            object[] results = this.Invoke("EPS_BoardWipMoveStatus", new object[] {
                        mesServer,
                        mesDataBase,
                        CustomerID,
                        WIPId,
                        RouteStepID,
                        EquipmentID,
                        userID,
                        NewAssyID,
                        Status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EPS_BoardWipMoveStatusAsync(string mesServer, string mesDataBase, int CustomerID, int WIPId, int RouteStepID, int EquipmentID, int userID, int NewAssyID, int Status) {
            this.EPS_BoardWipMoveStatusAsync(mesServer, mesDataBase, CustomerID, WIPId, RouteStepID, EquipmentID, userID, NewAssyID, Status, null);
        }
        
        /// <remarks/>
        public void EPS_BoardWipMoveStatusAsync(string mesServer, string mesDataBase, int CustomerID, int WIPId, int RouteStepID, int EquipmentID, int userID, int NewAssyID, int Status, object userState) {
            if ((this.EPS_BoardWipMoveStatusOperationCompleted == null)) {
                this.EPS_BoardWipMoveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPS_BoardWipMoveStatusOperationCompleted);
            }
            this.InvokeAsync("EPS_BoardWipMoveStatus", new object[] {
                        mesServer,
                        mesDataBase,
                        CustomerID,
                        WIPId,
                        RouteStepID,
                        EquipmentID,
                        userID,
                        NewAssyID,
                        Status}, this.EPS_BoardWipMoveStatusOperationCompleted, userState);
        }
        
        private void OnEPS_BoardWipMoveStatusOperationCompleted(object arg) {
            if ((this.EPS_BoardWipMoveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPS_BoardWipMoveStatusCompleted(this, new EPS_BoardWipMoveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_BoardWipMoveCompletedEventHandler(object sender, EPS_BoardWipMoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_BoardWipMoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_BoardWipMoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PassInspectionsCompletedEventHandler(object sender, PassInspectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassInspectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassInspectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void HistoryStatusCompletedEventHandler(object sender, HistoryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HistoryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HistoryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void HistoryByStepAndLoopsCompletedEventHandler(object sender, HistoryByStepAndLoopsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HistoryByStepAndLoopsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HistoryByStepAndLoopsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void BoardInHoldCompletedEventHandler(object sender, BoardInHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BoardInHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BoardInHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsScrapCompletedEventHandler(object sender, IsScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoopsByStepCompletedEventHandler(object sender, LoopsByStepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoopsByStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoopsByStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetMaterialIDCompletedEventHandler(object sender, GetMaterialIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaterialIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaterialIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRouteStepID_EquipmentIDCompletedEventHandler(object sender, GetRouteStepID_EquipmentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRouteStepID_EquipmentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRouteStepID_EquipmentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_BatchInfoCompletedEventHandler(object sender, EPS_BatchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_BatchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_BatchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_GetBatchesCompletedEventHandler(object sender, EPS_GetBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_GetBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_GetBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_LinkedSNCompletedEventHandler(object sender, EPS_LinkedSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_LinkedSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_LinkedSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_ProgressionInspectionCompletedEventHandler(object sender, EPS_ProgressionInspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_ProgressionInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_ProgressionInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_BatchSNCompletedEventHandler(object sender, EPS_BatchSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_BatchSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_BatchSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_LinkNonUniqueComponentCompletedEventHandler(object sender, EPS_LinkNonUniqueComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_LinkNonUniqueComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_LinkNonUniqueComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void JoinPanelCompletedEventHandler(object sender, JoinPanelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JoinPanelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JoinPanelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void BreakOutPanelCompletedEventHandler(object sender, BreakOutPanelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BreakOutPanelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BreakOutPanelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetNextAssemblyCompletedEventHandler(object sender, GetNextAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTester_IDCompletedEventHandler(object sender, GetTester_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTester_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTester_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRouteStep_IDCompletedEventHandler(object sender, GetRouteStep_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRouteStep_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRouteStep_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataEquipmentByBayCompletedEventHandler(object sender, GetDataEquipmentByBayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataEquipmentByBayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataEquipmentByBayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataEquipmentCompletedEventHandler(object sender, GetDataEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserMESIDCompletedEventHandler(object sender, GetUserMESIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMESIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMESIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataProgressionCompletedEventHandler(object sender, GetDataProgressionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataProgressionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataProgressionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataProgressionByRouteBayCompletedEventHandler(object sender, GetDataProgressionByRouteBayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataProgressionByRouteBayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataProgressionByRouteBayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCheckPointCompletedEventHandler(object sender, GetCheckPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTesterInfoCompletedEventHandler(object sender, GetTesterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTesterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTesterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_LinkUniqueComponentCompletedEventHandler(object sender, EPS_LinkUniqueComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_LinkUniqueComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_LinkUniqueComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetEquipmentIDCompletedEventHandler(object sender, GetEquipmentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEquipmentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEquipmentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectBySerialNumberCompletedEventHandler(object sender, SelectBySerialNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBySerialNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBySerialNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByPanelWithCoordinatesCompletedEventHandler(object sender, ListByPanelWithCoordinatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByPanelWithCoordinatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByPanelWithCoordinatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListAllByWipIDCompletedEventHandler(object sender, ListAllByWipIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllByWipIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllByWipIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByBoardCompletedEventHandler(object sender, ListByBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByPanelCompletedEventHandler(object sender, ListByPanelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByPanelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByPanelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAssemblySequenceCompletedEventHandler(object sender, GetAssemblySequenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssemblySequenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssemblySequenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetWorkCellInMESCompletedEventHandler(object sender, GetWorkCellInMESCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkCellInMESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkCellInMESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByNumberCompletedEventHandler(object sender, ListByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UnitHistoryCompletedEventHandler(object sender, UnitHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoadInfoSMTCompletedEventHandler(object sender, LoadInfoSMTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadInfoSMTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadInfoSMTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void QM_CRDsCompletedEventHandler(object sender, QM_CRDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QM_CRDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QM_CRDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void FeederTrayTrackCompletedEventHandler(object sender, FeederTrayTrackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeederTrayTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeederTrayTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EquiposListByActiveStatusCompletedEventHandler(object sender, EquiposListByActiveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EquiposListByActiveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EquiposListByActiveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void QM_SelectByIDCompletedEventHandler(object sender, QM_SelectByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QM_SelectByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QM_SelectByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void QM_SelectBySerialNumberCompletedEventHandler(object sender, QM_SelectBySerialNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QM_SelectBySerialNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QM_SelectBySerialNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WP_BatchCompletedEventHandler(object sender, WP_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WP_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WP_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void QM_DefectsCompletedEventHandler(object sender, QM_DefectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QM_DefectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QM_DefectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CR_RouteStepsCompletedEventHandler(object sender, CR_RouteStepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CR_RouteStepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CR_RouteStepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PlaceBoardOnHoldCompletedEventHandler(object sender, PlaceBoardOnHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBoardOnHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBoardOnHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReleaseBoardOnHoldCompletedEventHandler(object sender, ReleaseBoardOnHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseBoardOnHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseBoardOnHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListActiveHoldsByWipIDCompletedEventHandler(object sender, ListActiveHoldsByWipIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListActiveHoldsByWipIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListActiveHoldsByWipIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SearchRepairCompletedEventHandler(object sender, SearchRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SearchDefectCompletedEventHandler(object sender, SearchDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRouteStepCompletedEventHandler(object sender, GetRouteStepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRouteStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRouteStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListActiveByCustomerCompletedEventHandler(object sender, ListActiveByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListActiveByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListActiveByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void BoardHistoryReportCompletedEventHandler(object sender, BoardHistoryReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BoardHistoryReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BoardHistoryReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_BirthHistoryCompletedEventHandler(object sender, EPS_BirthHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_BirthHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_BirthHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_PackingSNCompletedEventHandler(object sender, EPS_PackingSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_PackingSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_PackingSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetMaterialByBOMCompletedEventHandler(object sender, GetMaterialByBOMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaterialByBOMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaterialByBOMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetMaterialInfoCompletedEventHandler(object sender, GetMaterialInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaterialInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaterialInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCRDsByBOMMaterialCompletedEventHandler(object sender, GetCRDsByBOMMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRDsByBOMMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRDsByBOMMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RevisionAssemblyCompletedEventHandler(object sender, RevisionAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevisionAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevisionAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void dtSQLQueryCompletedEventHandler(object sender, dtSQLQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dtSQLQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dtSQLQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectByNameAssemblyCompletedEventHandler(object sender, SelectByNameAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectByNameAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectByNameAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectByNameAssemblyVersionCompletedEventHandler(object sender, SelectByNameAssemblyVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectByNameAssemblyVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectByNameAssemblyVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCRDsByAssemblyCompletedEventHandler(object sender, GetCRDsByAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRDsByAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRDsByAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InspectionsCompletedEventHandler(object sender, InspectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InspectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InspectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IDModelCompletedEventHandler(object sender, IDModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IDModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SheetCRDsCompletedEventHandler(object sender, SheetCRDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SheetCRDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SheetCRDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_LinkChildBoardCompletedEventHandler(object sender, EPS_LinkChildBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_LinkChildBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_LinkChildBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_CreateBoardCompletedEventHandler(object sender, EPS_CreateBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_CreateBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_CreateBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_UnlinkCompletedEventHandler(object sender, EPS_UnlinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_UnlinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_UnlinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByLinkObjectIDCompletedEventHandler(object sender, ListByLinkObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByLinkObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByLinkObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByCustomerIDCompletedEventHandler(object sender, ListByCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByCustomerNameCompletedEventHandler(object sender, ListByCustomerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByCustomerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByCustomerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListByPropertyCompletedEventHandler(object sender, ListByPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListByPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListByPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void StepStatusCompletedEventHandler(object sender, StepStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StepStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StepStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IStepStatusCompletedEventHandler(object sender, IStepStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IStepStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IStepStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetStepStatusCompletedEventHandler(object sender, GetStepStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStepStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStepStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DiagnosticsCompletedEventHandler(object sender, DiagnosticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DiagnosticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DiagnosticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RepairCompletedEventHandler(object sender, RepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBoardSideCompletedEventHandler(object sender, GetBoardSideCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoardSideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoardSideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strAssembly {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsMasterCompletedEventHandler(object sender, IsMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime FechaBaja {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsMasterModelCompletedEventHandler(object sender, IsMasterModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsMasterModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsMasterModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime FechaBaja {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsMasterTypeCompletedEventHandler(object sender, IsMasterTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsMasterTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsMasterTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime FechaBaja {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBoardSideMachineFYPCompletedEventHandler(object sender, GetBoardSideMachineFYPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoardSideMachineFYPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoardSideMachineFYPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBoardSideMachineAXICompletedEventHandler(object sender, GetBoardSideMachineAXICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoardSideMachineAXICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoardSideMachineAXICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBoardSideMachineCompletedEventHandler(object sender, GetBoardSideMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoardSideMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoardSideMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strAssembly {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTesterAOICompletedEventHandler(object sender, GetTesterAOICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTesterAOICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTesterAOICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IDAssemblyCompletedEventHandler(object sender, IDAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IDAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EPS_BoardWipMoveStatusCompletedEventHandler(object sender, EPS_BoardWipMoveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPS_BoardWipMoveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPS_BoardWipMoveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591